{"version":3,"sources":["components/DigitalInvoiceForm.jsx","App.jsx","index.jsx"],"names":["DigitalInvoiceForm","defaultFormData","customerInfo","mobile","countryCode","name","email","gstrName","gstrMob","gstrNo","transactionInfo","clientId","batchId","roc","txnId","txnType","orderDetails","storeCode","storeAddress","billingPOSNo","netPayableAmount","subTotal","rounding","taxesInfo","cgstPercent","sgstPercent","igstPercent","utgstPercent","cgst","sgst","igst","utgst","payments","mode","total","status","paymentReferenceNo","orderNo","orderRegNo","productsData","description","productCode","quantity","mrp","uom","baseAmount","netAmount","hsnCode","discount","taxes","purchasedPieces","invoiceNo","barCode","loyaltyData","type","cardNum","pointsEarned","walletAmount","amountSaved","pointsRedeemed","cashierId","cashierName","orderDateTime","getCurrentDateTime","now","Date","pad","n","toString","padStart","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","eReceiptOpted","printOpted","billFooterData","disclaimer","purchaseTerms","feedbackCode","feedbackDiscount","feedbackLink","orderInstructions","footerInfo","store","address","addressLine1","addressLine2","addressLine3","city","state","country","pinCode","locationUrl","storeName","contactNumber1","contactNumber2","managerContactNumber","storeType","currencyId","CountryCode","cinNo","gstTin","fssaiNo","formData","setFormData","useState","activeTab","setActiveTab","popupMessage","setPopupMessage","popupType","setPopupType","loading","setLoading","deleteProductIndex","setDeleteProductIndex","formatFieldName","fieldName","customLabels","replace","str","toUpperCase","mandatoryFields","isFormValid","field","length","payment","product","handleChange","e","section","key","index","arguments","undefined","nestedKey","value","target","Number","prev","products","handleAddProduct","newProduct","customerInfoOrder","renderFields","map","isMandatory","includes","_jsxs","className","children","_jsx","style","color","onChange","_Fragment","Object","keys","taxKey","onClick","handleDeleteProduct","formatDateTimeForInput","date","time","split","day","month","year","formatDateTimeForState","step","loyaltyKey","onSubmit","async","preventDefault","payload","JSON","parse","stringify","convertToNumbers","obj","forEach","isNaN","convertToString","String","apiUrl","headers","Authorization","curlCommand","console","log","response","axios","post","data","error","_error$response","_error$response$data","_error$response2","message","disabled","display","gap","justifyContent","confirmDeleteProduct","updatedArray","splice","cancelDeleteProduct","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"uPAwhCeA,MAphCf,WAEE,MAYMC,EAAkB,CACtBC,aAAc,CACZC,OAAQ,aACRC,YAAa,MACbC,KAAM,SACNC,MAAO,8BACPC,SAAU,YACVC,QAAS,aACTC,OAAQ,gBAEVC,gBAAiB,CACfC,SAAU,UACVC,QAAS,OACTC,IAAK,MACLC,MAAO,IACPC,QAAS,OAEXC,aAAc,CACZC,UAAW,OACXC,aAAc,uCACdC,aAAc,MACdC,iBAAkB,MAClBC,SAAU,SACVC,SAAU,EACVC,UAAW,CACTC,YAAa,EACbC,YAAa,EACbC,YAAa,EACbC,aAAc,EACdC,KAAM,MACNC,KAAM,MACNC,KAAM,MACNC,MAAO,OAETC,SAAU,CACR,CACEC,KAAM,MACNC,MAAO,MACPC,OAAQ,UACRC,mBAAoB,KAGxBC,QAAS,KACTC,WAAY,IACZC,aAAc,CACZ,CACElC,KAAM,QACNmC,YAAa,QACbC,YAAa,OACbC,SAAU,EACVC,IAAK,IACLC,IAAK,OACLC,WAAY,IACZC,UAAW,IACXC,QAAS,UACTC,SAAU,GACVC,MAAO,CACLxB,YAAa,EACbI,KAAM,EACNL,YAAa,EACbI,KAAM,EACNF,YAAa,EACbI,KAAM,EACNH,aAAc,EACdI,MAAO,IAGX,CACE1B,KAAM,SACNmC,YAAa,SACbC,YAAa,OACbC,SAAU,EACVC,IAAK,IACLC,IAAK,OACLC,WAAY,IACZC,UAAW,IACXC,QAAS,UACTC,SAAU,EACVC,MAAO,CACLxB,YAAa,EACbI,KAAM,EACNL,YAAa,EACbI,KAAM,EACNF,YAAa,EACbI,KAAM,EACNH,aAAc,EACdI,MAAO,KAIbmB,gBAAiB,EACjBC,UAAW,OACXC,QAAS,GACTC,YAAa,CACXC,KAAM,GACNC,QAAS,GACTC,aAAc,EACdC,aAAc,EACdC,YAAa,EACbC,eAAgB,GAElBC,UAAW,SACXC,YAAa,UACbC,cAnHuBC,MACzB,MAAMC,EAAM,IAAIC,KACVC,EAAOC,GAAMA,EAAEC,WAAWC,SAAS,EAAG,KAO5C,MAAO,GANKH,EAAIF,EAAIM,cACNJ,EAAIF,EAAIO,WAAa,MACtBP,EAAIQ,iBACHN,EAAIF,EAAIS,eACNP,EAAIF,EAAIU,iBACRR,EAAIF,EAAIW,eACuC,EA0G9CZ,GACfa,eAAe,EACfC,YAAY,GAEdC,eAAgB,CACdC,WAAY,qBACZC,cAAe,yBACfC,aAAc,SACdC,iBAAkB,EAClBC,aAAc,yBACdC,kBAAmB,gCACnBC,WACE,0YAGJC,MAAO,CACLC,QAAS,CACPC,aAAc,oJACdC,aAAc,iBACdC,aAAc,iBACdC,KAAM,YACNC,MAAO,YACPC,QAAS,QACTC,QAAS,SACTC,YAAa,yDAEf9E,UAAW,OACXX,MAAO,kBACP0F,UAAW,qBACXC,eAAgB,cAChBC,eAAgB,cAChBC,qBAAsB,aACtBC,UAAW,aACXC,WAAY,MACZC,YAAa,MACbC,MAAO,wBACPC,OAAQ,qBACRC,QAAS,wBAINC,EAAUC,GAAeC,mBAAS3G,IAClC4G,EAAWC,GAAgBF,mBAAS,iBACpCG,EAAcC,GAAmBJ,mBAAS,OAC1CK,EAAWC,GAAgBN,mBAAS,YACpCO,EAASC,GAAcR,oBAAS,IAGhCS,EAAoBC,GAAyBV,mBAAS,MAGvDW,EAAmBC,IAEvB,MAAMC,EAAe,CACnBrE,QAAS,iBACT3C,OAAQ,aACRD,QAAS,cACTD,SAAU,eACVY,aAAc,iBACdyC,UAAW,aACXxC,iBAAkB,2BAClBC,SAAU,kBACVa,MAAO,cACPvB,SAAU,YACVC,QAAS,WACTiC,WAAY,oBACZF,IAAK,YACLG,UAAW,mBACXV,mBAAoB,wBAGtB,OAAIqF,EAAaD,GAAmBC,EAAaD,GAE1CA,EACJE,QAAQ,WAAY,OACpBA,QAAQ,MAAOC,GAAQA,EAAIC,eAAc,EAIxCC,EAAkB,CACtB3H,aAAc,CAAC,SAAU,eACzBQ,gBAAiB,CAAC,WAAY,UAAW,OACzCM,aAAc,CACZ,YACA,eACA,eACA,mBACA,UACA,YACA,cACA,iBAEFgB,SAAU,CAAC,OAAQ,SACnBO,aAAc,CAAC,OAAQ,cAAe,WAAY,MAAM,MAAO,aAAc,aAC7EuC,eAAgB,CAAC,cACjBQ,MAAO,CAAC,cAIJwC,EAAcA,KAElB,IAAK,MAAMC,KAASF,EAAgB3H,aAClC,IACGwG,EAASxG,aAAa6H,IACU,KAAjCrB,EAASxG,aAAa6H,IACW,IAAjCrB,EAASxG,aAAa6H,GAEtB,OAAO,EAIX,IAAK,MAAMA,KAASF,EAAgBnH,gBAClC,IACGgG,EAAShG,gBAAgBqH,IACU,KAApCrB,EAAShG,gBAAgBqH,IACW,IAApCrB,EAAShG,gBAAgBqH,GAEzB,OAAO,EAIX,IAAK,MAAMA,KAASF,EAAgB7G,aAClC,IACG0F,EAAS1F,aAAa+G,IACU,KAAjCrB,EAAS1F,aAAa+G,IACW,IAAjCrB,EAAS1F,aAAa+G,GAEtB,OAAO,EAIX,IACGrB,EAAS1F,aAAagB,UACmB,IAA1C0E,EAAS1F,aAAagB,SAASgG,OAE/B,OAAO,EAET,IAAK,MAAMC,KAAWvB,EAAS1F,aAAagB,SAC1C,IAAK,MAAM+F,KAASF,EAAgB7F,SAClC,IACGiG,EAAQF,IACU,KAAnBE,EAAQF,IACW,IAAnBE,EAAQF,GAER,OAAO,EAKb,IACGrB,EAAS1F,aAAauB,cACuB,IAA9CmE,EAAS1F,aAAauB,aAAayF,OAEnC,OAAO,EAET,IAAK,MAAME,KAAWxB,EAAS1F,aAAauB,aAC1C,IAAK,MAAMwF,KAASF,EAAgBtF,aAClC,IACG2F,EAAQH,IACU,KAAnBG,EAAQH,IACW,IAAnBG,EAAQH,GAER,OAAO,EAKb,IAAK,MAAMA,KAASF,EAAgB/C,eAClC,IACG4B,EAAS5B,eAAeiD,IACU,KAAnCrB,EAAS5B,eAAeiD,IACW,IAAnCrB,EAAS5B,eAAeiD,GAExB,OAAO,EAGX,OAAO,CAAI,EAGPI,EAAe,SAACC,EAAGC,EAASC,GAAyC,IAApCC,EAAKC,UAAAR,OAAA,QAAAS,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAAME,EAASF,UAAAR,OAAA,QAAAS,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAC/D,MAAMG,EAA0B,WAAlBP,EAAEQ,OAAOtF,KAAoBuF,OAAOT,EAAEQ,OAAOD,OAASP,EAAEQ,OAAOD,MAE7EhC,GAAamC,IAEX,GAAkB,uBAAdJ,GAAgD,OAAVH,EAAgB,CACxD,MAAMQ,EAAW,IAAID,EAAK9H,aAAauB,cACjC2F,EAAU,IAAKa,EAASR,IAG9B,OAFAL,EAAQjF,MAAQ,IAAKiF,EAAQjF,MAAO,CAACqF,GAAMK,GAC3CI,EAASR,GAASL,EACX,IACFY,EACH9H,aAAc,IACT8H,EAAK9H,aACRuB,aAAcwG,GAGpB,CAGA,GAAkB,cAAdL,EACF,MAAO,IACFI,EACH9H,aAAc,IACT8H,EAAK9H,aACRO,UAAW,IACNuH,EAAK9H,aAAaO,UACrB,CAAC+G,GAAMK,KAMf,GAAkB,gBAAdD,EACF,MAAO,IACFI,EACH9H,aAAc,IACT8H,EAAK9H,aACRqC,YAAa,IACRyF,EAAK9H,aAAaqC,YACrB,CAACiF,GAAMK,KAOf,GAAkB,iBAAdD,GAA0C,OAAVH,EAAgB,CAClD,MAAMQ,EAAW,IAAID,EAAK9H,aAAauB,cAEvC,OADAwG,EAASR,GAAS,IAAKQ,EAASR,GAAQ,CAACD,GAAMK,GACxC,IACFG,EACH9H,aAAc,IACT8H,EAAK9H,aACRuB,aAAcwG,GAGpB,CAGA,GAAc,OAAVR,GAAgC,aAAdG,GAAwC,iBAAZL,EAA4B,CAC5E,MAAMrG,EAAW,IAAI8G,EAAK9H,aAAagB,UAEvC,OADAA,EAASuG,GAAS,IAAKvG,EAASuG,GAAQ,CAACD,GAAMK,GACxC,IACFG,EACH9H,aAAc,IACT8H,EAAK9H,aACRgB,YAGN,CAEA,GAAc,OAAVuG,GAA8B,iBAAZF,EAA4B,CAChD,MAAMU,EAAW,IAAID,EAAK9H,aAAauB,cAEvC,OADAwG,EAASR,GAAS,IAAKQ,EAASR,GAAQ,CAACD,GAAMK,GACxC,IACFG,EACH9H,aAAc,IACT8H,EAAK9H,aACRuB,aAAcwG,GAGpB,CAGA,OAAIV,KAAWS,EACN,IACFA,EACH,CAACT,GAAU,IACNS,EAAKT,GACR,CAACC,GAAMK,IAKNG,CAAI,GAEf,EAEME,EAAmBA,KACvB,MAAMC,EAAa,CACjB5I,KAAM,GACNmC,YAAa,GACbC,YAAa,GACbC,SAAU,EACVC,IAAK,EACLC,IAAK,GACLC,WAAY,EACZC,UAAW,IACXC,QAAS,GACTC,SAAU,EACVC,MAAO,CACLxB,YAAa,EACbI,KAAM,EACNL,YAAa,EACbI,KAAM,EACNF,YAAa,EACbI,KAAM,EACNH,aAAc,EACdI,MAAO,IAGX4E,GAAamC,IAAI,IACZA,EACH9H,aAAc,IACT8H,EAAK9H,aACRuB,aAAc,IAAIuG,EAAK9H,aAAauB,aAAc0G,OAEnD,EA0GCC,EAAoB,CACxB,SACA,cACA,OACA,QACA,WACA,UACA,UAGIC,EAAgBd,GACJ,iBAAZA,EACKa,EAAkBE,KAAKd,IAC5B,MAAMe,EACHxB,EAAgBQ,IAAYR,EAAgBQ,GAASiB,SAAShB,KAC/D,EACF,OACEiB,eAAA,OAAeC,UAAU,aAAYC,SAAA,CACnCF,eAAA,SAAOC,UAAU,cAAaC,SAAA,CAC3BlC,EAAgBe,GAChBe,GAAeK,cAAA,QAAMC,MAAO,CAAEC,MAAO,OAAQH,SAAC,UAEjDC,cAAA,SACEpG,KAAK,OACLqF,MAAOjC,EAAS2B,GAASC,GACzBuB,SAAWzB,GAAMD,EAAaC,EAAGC,EAASC,GAC1CkB,UAAU,kBATJlB,EAWJ,IAKI,iBAAZD,EAEAkB,eAAAO,WAAA,CAAAL,SAAA,CACG/C,EAAS1F,aAAauB,cACrBmE,EAAS1F,aAAauB,aAAa6G,KAAI,CAAClB,EAASK,IAC/CgB,eAAA,OAAiBC,UAAU,gBAAeC,SAAA,CACxCC,cAAA,OAAKF,UAAU,iBAAgBC,SAC5BM,OAAOC,KAAK9B,GAASkB,KAAKd,IACzB,GAAY,UAARA,EAEF,OACEiB,eAAA,OAAeC,UAAU,aAAYC,SAAA,CACnCC,cAAA,MAAAD,SAAI,UACJC,cAAA,OAAKF,UAAU,iBAAgBC,SAC5BvB,EAAQjF,OACP8G,OAAOC,KAAK9B,EAAQjF,OAAOmG,KAAKa,GAC9BV,eAAA,OAAkBC,UAAU,aAAYC,SAAA,CACtCC,cAAA,SAAOF,UAAU,cAAaC,SAAElC,EAAgB0C,KAChDP,cAAA,SACEpG,KAAK,SACLqF,MAAOT,EAAQjF,MAAMgH,IAAW,EAChCJ,SAAWzB,GACTD,EAAaC,EAAG,eAAgB6B,EAAQ1B,EAAO,sBAEjDiB,UAAU,kBARJS,SALR3B,GAqBd,MAAMe,EACJxB,EAAgBtF,aAAa+G,SAAShB,GACxC,OACEiB,eAAA,OAAeC,UAAU,aAAYC,SAAA,CACnCF,eAAA,SAAOC,UAAU,cAAaC,SAAA,CAC3BlC,EAAgBe,GAChBe,GAAeK,cAAA,QAAMC,MAAO,CAAEC,MAAO,OAAQH,SAAC,UAEjDC,cAAA,SACEpG,KAAK,OACLqF,MAAOT,EAAQI,IAAQ,GACvBuB,SAAWzB,GACTD,EAAaC,EAAG,eAAgBE,EAAKC,EAAO,gBAE9CiB,UAAU,kBAXJlB,EAaJ,MAIZoB,cAAA,UACEpG,KAAK,SACLkG,UAAU,wBACVU,QAASA,IA/LI3B,KAC3BjB,EAAsBiB,EAAM,EA8LC4B,CAAoB5B,GAAOkB,SAC3C,WAGDC,cAAA,MAAIF,UAAU,wBAtDNjB,KAyDdmB,cAAA,UACEpG,KAAK,SACLkG,UAAU,qBACVU,QAASlB,EAAiBS,SAC3B,mBAOS,iBAAZpB,EAEAkB,eAAAO,WAAA,CAAAL,SAAA,CACEF,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACzBC,cAAA,MAAAD,SAAI,kBACJC,cAAA,OAAKF,UAAU,sBAAqBC,SAEjCM,OAAOC,KAAKtD,EAAS2B,IAAUe,KAAKd,IACnC,GACU,iBAARA,GACQ,aAARA,GACQ,cAARA,GACQ,gBAARA,EAGA,OAAO,KAET,GAAY,kBAARA,EAAyB,CAG3B,MAAM8B,EAA0BzB,IAE9B,IAAKA,EAAO,MAAO,GACnB,MAAO0B,EAAMC,GAAQ3B,EAAM4B,MAAM,KACjC,IAAKF,IAASC,EAAM,MAAO,GAC3B,MAAOE,EAAKC,EAAOC,GAAQL,EAAKE,MAAM,KACtC,MAAO,GAAGG,KAAQD,EAAMpG,SAAS,EAAG,QAAQmG,EAAInG,SAAS,EAAG,QAAQiG,GAAM,EAGtEK,EAA0BhC,IAE9B,IAAKA,EAAO,MAAO,GACnB,MAAO0B,EAAMC,GAAQ3B,EAAM4B,MAAM,KACjC,IAAKF,IAASC,EAAM,MAAO,GAC3B,MAAOI,EAAMD,EAAOD,GAAOH,EAAKE,MAAM,KACtC,MAAO,GAAGC,KAAOC,KAASC,KAAQJ,GAAM,EAG1C,OACEf,eAAA,OAAeC,UAAU,aAAYC,SAAA,CACnCC,cAAA,SAAOF,UAAU,cAAaC,SAAElC,EAAgBe,KAChDoB,cAAA,SACEpG,KAAK,iBACLsH,KAAK,IACLjC,MAAOyB,EAAuB1D,EAAS2B,GAASC,IAChDuB,SAAWzB,GACTD,EACE,CAAES,OAAQ,CAAED,MAAOgC,EAAuBvC,EAAEQ,OAAOD,SACnDN,EACAC,GAGJkB,UAAU,kBAbJlB,EAqDd,CAEA,MAAMe,EACHxB,EAAgBQ,IAAYR,EAAgBQ,GAASiB,SAAShB,KAC/D,EAEF,OACEiB,eAAA,OAAeC,UAAU,aAAYC,SAAA,CACnCF,eAAA,SAAOC,UAAU,cAAaC,SAAA,CAC3BlC,EAAgBe,GAChBe,GAAeK,cAAA,QAAMC,MAAO,CAAEC,MAAO,OAAQH,SAAC,UAEjDC,cAAA,SACEpG,KAAK,OACLqF,MAAOjC,EAAS2B,GAASC,GACzBuB,SAAWzB,GAAMD,EAAaC,EAAGC,EAASC,GAC1CkB,UAAU,kBATJlB,EAWJ,SAOb5B,EAAS1F,aAAagB,UACrBuH,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACzBC,cAAA,MAAAD,SAAI,aACH/C,EAAS1F,aAAagB,SAASoH,KAAI,CAACnB,EAASM,IAC5CgB,eAAA,OAAiBC,UAAU,gBAAeC,SAAA,CACxCF,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACzBF,eAAA,SAAOC,UAAU,cAAaC,SAAA,CAC3BlC,EAAgB,QACjBmC,cAAA,QAAMC,MAAO,CAAEC,MAAO,OAAQH,SAAC,UAEjCF,eAAA,UACEZ,MAAOV,EAAQhG,KACf4H,SAAWzB,GACTD,EAAaC,EAAG,eAAgB,OAAQG,EAAO,YAEjDiB,UAAU,cAAaC,SAAA,CAEvBC,cAAA,UAAQf,MAAM,MAAKc,SAAC,QACpBC,cAAA,UAAQf,MAAM,OAAMc,SAAC,SACrBC,cAAA,UAAQf,MAAM,OAAMc,SAAC,eAGzBF,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACzBF,eAAA,SAAOC,UAAU,cAAaC,SAAA,CAC3BlC,EAAgB,SACjBmC,cAAA,QAAMC,MAAO,CAAEC,MAAO,OAAQH,SAAC,UAEjCC,cAAA,SACEpG,KAAK,SACLqF,MAAOV,EAAQ/F,MACf2H,SAAWzB,GACTD,EAAaC,EAAG,eAAgB,QAASG,EAAO,YAElDiB,UAAU,mBAGdD,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACzBC,cAAA,SAAOF,UAAU,cAAaC,SAAElC,EAAgB,YAChDmC,cAAA,SACEpG,KAAK,OACLqF,MAAOV,EAAQ9F,OACf0H,SAAWzB,GACTD,EAAaC,EAAG,eAAgB,SAAUG,EAAO,YAEnDiB,UAAU,mBAIbD,eAAA,OAAKC,UAAU,aAAYC,SAAA,CAC1BC,cAAA,SAAOF,UAAU,cAAaC,SAAElC,EAAgB,wBAChDmC,cAAA,SACEpG,KAAK,OACLqF,MAAOV,EAAQ7F,mBACfyH,SAAWzB,GACTD,EAAaC,EAAG,eAAgB,qBAAsBG,EAAO,YAE/DiB,UAAU,qBApDNjB,QA8Df7B,EAAS1F,aAAaO,WACrBgI,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACzBC,cAAA,MAAAD,SAAI,eACJC,cAAA,OAAKF,UAAU,iBAAgBC,SAC5BM,OAAOC,KAAKtD,EAAS1F,aAAaO,WAAW6H,KAAKa,GACjDV,eAAA,OAAkBC,UAAU,aAAYC,SAAA,CACtCC,cAAA,SAAOF,UAAU,cAAaC,SAAElC,EAAgB0C,KAChDP,cAAA,SACEpG,KAAK,SACLqF,MAAOjC,EAAS1F,aAAaO,UAAU0I,IAAW,GAClDJ,SAAWzB,GACTD,EAAaC,EAAG,eAAgB6B,EAAQ,KAAM,aAEhDT,UAAU,kBARJS,UAiBjBvD,EAAS1F,aAAaqC,aACrBkG,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACzBC,cAAA,MAAAD,SAAI,iBACJC,cAAA,OAAKF,UAAU,qBAAoBC,SAChCM,OAAOC,KAAKtD,EAAS1F,aAAaqC,aAAa+F,KAAKyB,GACnDtB,eAAA,OAAsBC,UAAU,aAAYC,SAAA,CAC1CC,cAAA,SAAOF,UAAU,cAAaC,SAAElC,EAAgBsD,KAChDnB,cAAA,SACEpG,KAAK,OACLqF,MAAOjC,EAAS1F,aAAaqC,YAAYwH,GACzChB,SAAWzB,GACTD,EAAaC,EAAG,eAAgByC,EAAY,KAAM,eAEpDrB,UAAU,kBARJqB,aAmBR,UAAZxC,EAEAqB,cAAAI,WAAA,CAAAL,SACEF,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACzBC,cAAA,MAAAD,SAAI,kBACJF,eAAA,OAAKC,UAAU,sBAAqBC,SAAA,CAEjCM,OAAOC,KAAKtD,EAAS2B,GAAS9C,SAAS6D,KAAKd,GAC3CiB,eAAA,OAAeC,UAAU,aAAYC,SAAA,CACnCC,cAAA,SAAOF,UAAU,cAAaC,SAAElC,EAAgBe,KAChDoB,cAAA,SACEpG,KAAK,OACLqF,MAAOjC,EAAS2B,GAAS9C,QAAQ+C,GACjCuB,SAAWzB,GACTD,EAAaC,EAAGC,EAASC,EAAK,KAAM,WAEtCkB,UAAU,kBARJlB,KAcXyB,OAAOC,KAAKtD,EAAS2B,IAAUe,KAAKd,GACvB,YAARA,EAA0B,KAG5BiB,eAAA,OAAeC,UAAU,aAAYC,SAAA,CACnCC,cAAA,SAAOF,UAAU,cAAaC,SAAElC,EAAgBe,KAChDoB,cAAA,SACEpG,KAAK,OACLqF,MAAOjC,EAAS2B,GAASC,GACzBuB,SAAWzB,GAAMD,EAAaC,EAAGC,EAASC,GAC1CkB,UAAU,kBANJlB,aAiBjByB,OAAOC,KAAKtD,EAAS2B,IAAUe,KAAKd,IAEzC,GAAgB,oBAAZD,GAAyC,YAARC,EACnC,OACEiB,eAAA,OAAeC,UAAU,aAAYC,SAAA,CACnCC,cAAA,SAAOF,UAAU,cAAaC,SAAElC,EAAgBe,KAChDiB,eAAA,UACEZ,MAAOjC,EAAS2B,GAASC,GACzBuB,SAAWzB,GAAMD,EAAaC,EAAGC,EAASC,GAC1CkB,UAAU,cAAaC,SAAA,CAEvBC,cAAA,UAAQf,MAAM,MAAKc,SAAC,QACpBC,cAAA,UAAQf,MAAM,OAAMc,SAAC,SACrBC,cAAA,UAAQf,MAAM,OAAMc,SAAC,cATfnB,GAed,MAAMe,EACHxB,EAAgBQ,IAAYR,EAAgBQ,GAASiB,SAAShB,KAC/D,EAEF,OACEiB,eAAA,OAAeC,UAAU,aAAYC,SAAA,CACnCF,eAAA,SAAOC,UAAU,cAAaC,SAAA,CAC3BlC,EAAgBe,GAChBe,GAAeK,cAAA,QAAMC,MAAO,CAAEC,MAAO,OAAQH,SAAC,UAEjDC,cAAA,SACEpG,KAAK,OACLqF,MAAOjC,EAAS2B,GAASC,GACzBuB,SAAWzB,GAAMD,EAAaC,EAAGC,EAASC,GAC1CkB,UAAU,kBATJlB,EAWJ,IAKZ,OACEiB,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,MAAIF,UAAU,aAAYC,SAAC,yBAC3BF,eAAA,OAAKC,UAAW,SAAQzC,EAAe,eAAiB,IAAK0C,SAAA,CAC3DC,cAAA,UACEF,UAAW,eAA4B,iBAAd3C,EAA+B,SAAW,IACnEqD,QAASA,IAAMpD,EAAa,gBAAgB2C,SAC7C,kBAGDC,cAAA,UACEF,UAAW,eAA4B,oBAAd3C,EAAkC,SAAW,IACtEqD,QAASA,IAAMpD,EAAa,mBAAmB2C,SAChD,qBAGDC,cAAA,UACEF,UAAW,eAA4B,iBAAd3C,EAA+B,SAAW,IACnEqD,QAASA,IAAMpD,EAAa,gBAAgB2C,SAC7C,eAGDC,cAAA,UACEF,UAAW,eAA4B,iBAAd3C,EAA+B,SAAW,IACnEqD,QAASA,IAAMpD,EAAa,gBAAgB2C,SAC7C,iBAGDC,cAAA,UACEF,UAAW,eAA4B,mBAAd3C,EAAiC,SAAW,IACrEqD,QAASA,IAAMpD,EAAa,kBAAkB2C,SAC/C,qBAGDC,cAAA,UACEF,UAAW,eAA4B,UAAd3C,EAAwB,SAAW,IAC5DqD,QAASA,IAAMpD,EAAa,SAAS2C,SACtC,kBAIHF,eAAA,QAAMuB,SA3hBWC,UAEnB,GADA3C,EAAE4C,kBACGlD,IAGH,OAFAZ,EAAa,cACbF,EAAgB,mDAGlBI,GAAW,GAGX,MAAM6D,EAAUC,KAAKC,MAAMD,KAAKE,UAAU1E,IAGpC2E,EAAoBC,IACxBvB,OAAOC,KAAKsB,GAAKC,SAASjD,IACA,kBAAbgD,EAAIhD,IAAsBkD,MAAMF,EAAIhD,IAEhB,kBAAbgD,EAAIhD,IAAkC,OAAbgD,EAAIhD,IAC7C+C,EAAiBC,EAAIhD,IAFrBgD,EAAIhD,GAAOO,OAAOyC,EAAIhD,GAGxB,GACA,EAGEmD,EAAmB9C,GACT,OAAVA,QAA4BF,IAAVE,EACb,GAEF+C,OAAO/C,GAIhB0C,EAAiBJ,EAAQvK,iBACzB2K,EAAiBJ,EAAQjK,cACzByK,EAAgBR,EAAQ9H,WACxBsI,EAAgBR,EAAQlI,SACxB0I,EAAgBR,EAAQ5I,SACxBoJ,EAAgBR,EAAQ3I,YACxBmJ,EAAgBR,EAAQ9J,cACxBsK,EAAgBR,EAAQrH,WACxB6H,EAAgBR,EAAQhK,WACxB8I,OAAOC,KAAKiB,EAAQvK,iBAAiB6K,SAASjD,IAC5C2C,EAAQvK,gBAAgB4H,GAAOmD,EAAgBR,EAAQvK,gBAAgB4H,GAAK,IAI9E,MAAMqD,EACJ,yGAIIC,EAAU,CACdC,cAAe,wsCACf,eAAgB,mBAChB,iBAAkB,OAIdC,EAAc,sBACLH,mCACQC,EAAQC,8CACTD,EAAQ,kDACNA,EAAQ,sCACtBV,KAAKE,UAAUH,EAAS,KAAM,YAExCc,QAAQC,IAAI,wBAAyBF,GAErC,IACE,MAAMG,QAAiBC,IAAMC,KAAKR,EAAQV,EAAS,CAAEW,YACrD1E,EAAa,WACbF,EAAgB,8BAChB+E,QAAQC,IAAI,YAAaC,EAASG,KACpC,CAAE,MAAOC,GAAQ,IAADC,EAAAC,EAAAC,EACdtF,EAAa,SACbF,GAA8B,QAAdsF,EAAAD,EAAMJ,gBAAQ,IAAAK,GAAM,QAANC,EAAdD,EAAgBF,YAAI,IAAAG,OAAN,EAAdA,EAAsBE,UAAW,oBACjDV,QAAQM,MAAM,UAAwB,QAAdG,EAAAH,EAAMJ,gBAAQ,IAAAO,OAAA,EAAdA,EAAgBJ,OAAQC,EAAMI,QACxD,CAAC,QACCrF,GAAW,EACb,GA8cgCoC,UAAW,SAAQzC,EAAe,eAAiB,IAAK0C,SAAA,CACrE,iBAAd5C,GACC6C,cAAA,OAAKF,UAAU,eAAcC,SAAEN,EAAa,kBAE/B,oBAAdtC,GACC6C,cAAA,OAAKF,UAAU,eAAcC,SAAEN,EAAa,qBAE/B,iBAAdtC,GACC6C,cAAA,OAAKF,UAAU,eAAcC,SAAEN,EAAa,kBAE/B,iBAAdtC,GACC6C,cAAA,OAAKF,UAAU,eAAcC,SAAEN,EAAa,kBAE/B,mBAAdtC,GACC6C,cAAA,OAAKF,UAAU,eAAcC,SAAEN,EAAa,oBAE/B,UAAdtC,GACC6C,cAAA,OAAKF,UAAU,eAAcC,SAAEN,EAAa,WAE9CO,cAAA,UACEpG,KAAK,SACLkG,UAAU,gBACVkD,UAAW5E,IAAc2B,SAC1B,cAIFtC,GACLuC,cAAA,OAAKF,UAAU,gBAAeC,SAC5BC,cAAA,OAAKF,UAAU,cAGZzC,GACCwC,eAAA,OAAKC,UAAW,SAASvC,IAAYwC,SAAA,CACnCC,cAAA,MAAAD,SAAmB,YAAdxC,EAA0B,UAAY,UAC3CyC,cAAA,KAAAD,SAAI1C,IACJ2C,cAAA,UAAQQ,QAASA,IAAMlD,EAAgB,MAAMyC,SAAC,aAK1B,OAAvBpC,GACCkC,eAAA,OAAKC,UAAU,QAAOC,SAAA,CACpBC,cAAA,MAAAD,SAAI,mBACJC,cAAA,KAAAD,SAAG,wCACHF,eAAA,OAAKI,MAAO,CAAEgD,QAAS,OAAQC,IAAK,OAAQC,eAAgB,UAAWpD,SAAA,CACrEC,cAAA,UAAQQ,QA5lBW4C,KAC3BnG,GAAamC,IACX,MAAMiE,EAAe,IAAIjE,EAAK9H,aAAauB,cAE3C,OADAwK,EAAaC,OAAO3F,EAAoB,GACjC,IACFyB,EACH9H,aAAc,IACT8H,EAAK9H,aACRuB,aAAcwK,GAEjB,IAEHzF,EAAsB,KAAK,EAglBmBmC,SAAC,QACvCC,cAAA,UAAQQ,QA9kBU+C,KAC1B3F,EAAsB,KAAK,EA6kBkBmC,SAAC,eAMlD,ECxgCeyD,MAXf,WACE,OACE3D,eAAA,OAAAE,SAAA,CACEC,cAAA,OAAKF,UAAU,OAAMC,SACnBC,cAAA,OAAKF,UAAU,YAAWC,SAAC,gBAE7BC,cAAC1J,EAAkB,MAGzB,E,MCPAmN,IAASC,OACP1D,cAAC2D,IAAMC,WAAU,CAAA7D,SACfC,cAACwD,EAAG,MAENK,SAASC,eAAe,Q","file":"static/js/main.2307863b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./DigitalInvoiceForm.css\";\r\n\r\nfunction DigitalInvoiceForm() {\r\n  // Helper to get current date-time in \"DD-MM-YYYY HH:mm:ss\" format\r\n  const getCurrentDateTime = () => {\r\n    const now = new Date();\r\n    const pad = (n) => n.toString().padStart(2, \"0\");\r\n    const day = pad(now.getDate());\r\n    const month = pad(now.getMonth() + 1);\r\n    const year = now.getFullYear();\r\n    const hours = pad(now.getHours());\r\n    const minutes = pad(now.getMinutes());\r\n    const seconds = pad(now.getSeconds());\r\n    return `${day}-${month}-${year} ${hours}:${minutes}:${seconds}`;\r\n  };\r\n\r\n  const defaultFormData = {\r\n    customerInfo: {\r\n      mobile: \"9910403116\",\r\n      countryCode: \"+91\", // moved below mobile\r\n      name: \"Rhythm\",\r\n      email: \"rhythm.chouksey@example.com\",\r\n      gstrName: \"Ramandeep\",\r\n      gstrMob: \"9764775793\",\r\n      gstrNo: \"217686439898\",\r\n    },\r\n    transactionInfo: {\r\n      clientId: \"2882482\",\r\n      batchId: \"9344\",\r\n      roc: \"204\",\r\n      txnId: \"0\",\r\n      txnType: \"UPI\",\r\n    },\r\n    orderDetails: {\r\n      storeCode: \"9991\",\r\n      storeAddress: \"Connaught Plaza Restaurants Pvt.Ltd.\",\r\n      billingPOSNo: \"101\",\r\n      netPayableAmount: 13196,\r\n      subTotal: 11782.12,\r\n      rounding: 0,\r\n      taxesInfo: {\r\n        cgstPercent: 9,\r\n        sgstPercent: 9,\r\n        igstPercent: 9,\r\n        utgstPercent: 9,\r\n        cgst: 148.5,\r\n        sgst: 148.5,\r\n        igst: 148.5,\r\n        utgst: 148.5,\r\n      },\r\n      payments: [\r\n        {\r\n          mode: \"UPI\",\r\n          total: 13196,\r\n          status: \"SUCCESS\",\r\n          paymentReferenceNo: \"\",\r\n        },\r\n      ],\r\n      orderNo: \"28\",\r\n      orderRegNo: \"1\",\r\n      productsData: [\r\n        {\r\n          name: \"Pizza\",\r\n          description: \"Pizza\",\r\n          productCode: \"A123\",\r\n          quantity: 1,\r\n          mrp: 300,\r\n          uom: \"unit\",\r\n          baseAmount: 250,\r\n          netAmount: 250,\r\n          hsnCode: \"6276462\",\r\n          discount: 50,\r\n          taxes: {\r\n            sgstPercent: 6,\r\n            sgst: 8,\r\n            cgstPercent: 6,\r\n            cgst: 8,\r\n            igstPercent: 6,\r\n            igst: 8,\r\n            utgstPercent: 6,\r\n            utgst: 3,\r\n          },\r\n        },\r\n        {\r\n          name: \"Burger\",\r\n          description: \"Burger\",\r\n          productCode: \"A124\",\r\n          quantity: 2,\r\n          mrp: 200,\r\n          uom: \"unit\",\r\n          baseAmount: 200,\r\n          netAmount: 250,\r\n          hsnCode: \"6276462\",\r\n          discount: 0,\r\n          taxes: {\r\n            sgstPercent: 6,\r\n            sgst: 8,\r\n            cgstPercent: 6,\r\n            cgst: 8,\r\n            igstPercent: 6,\r\n            igst: 8,\r\n            utgstPercent: 6,\r\n            utgst: 3,\r\n          },\r\n        },\r\n      ],\r\n      purchasedPieces: 3,\r\n      invoiceNo: \"5286\",\r\n      barCode: \"\",\r\n      loyaltyData: {\r\n        type: \"\",\r\n        cardNum: \"\",\r\n        pointsEarned: 0,\r\n        walletAmount: 0,\r\n        amountSaved: 0,\r\n        pointsRedeemed: 0,\r\n      },\r\n      cashierId: \"475117\",\r\n      cashierName: \"Krishna\",\r\n      orderDateTime: getCurrentDateTime(), // Set default to current date-time\r\n      eReceiptOpted: true,\r\n      printOpted: true,\r\n    },\r\n    billFooterData: {\r\n      disclaimer: \"disclaimer testing\",\r\n      purchaseTerms: \"https://company.co.in/\",\r\n      feedbackCode: \"LTE123\",\r\n      feedbackDiscount: 0,\r\n      feedbackLink: \"https://company.co.in/\",\r\n      orderInstructions: \"Please provide black Umbrella\",\r\n      footerInfo:\r\n        \"GSTIN-27AAAFH1333H1ZT         \\n         GST Classification -         \\n    Restaurant Services SAC-996331    \\n        FSSAI : 11517007000202        \\n We value your feedback. Share it to: \\n     myfeedback@mcdonaldsindia.com     \\n # The collection of donation is done \\n  on behalf of Ronald McDonald House  \\nCharities Foundation India (RMHC India)\\n  on a principal-to-principal basis.\",\r\n    },\r\n    //ADDING STORE INFO\r\n    store: {\r\n      address: {\r\n        addressLine1: \"Hardcastle Restaurants Pvt. Ltd.,   \\n     McDonald's Family Restaurant     \\n   Unit No 2 and 3, Shivai Industry   \\n            Tel- 8928304109\",\r\n        addressLine2: \"Address Line 2\",\r\n        addressLine3: \"Address Line 3\",\r\n        city: \"Bengaluru\",\r\n        state: \"Karnataka\",\r\n        country: \"India\",\r\n        pinCode: \"560001\",\r\n        locationUrl: \"https://maps.google.com/maps?cid=11549840952542248488\",\r\n      },\r\n      storeCode: \"1001\",\r\n      email: \"info@proenx.com\",\r\n      storeName: \"Proenx UAT Store 1\",\r\n      contactNumber1: \"18000000000\",\r\n      contactNumber2: \"18000000000\",\r\n      managerContactNumber: \"9620921294\",\r\n      storeType: \"RESTAURANT\",\r\n      currencyId: \"INR\",\r\n      CountryCode: \"+91\",\r\n      cinNo: \"L98765432109876543210\",\r\n      gstTin: \"ABC123DEF456GHI789\",\r\n      fssaiNo: \"ABC123DEF456GHI789\",\r\n    },\r\n  };\r\n\r\n  const [formData, setFormData] = useState(defaultFormData);\r\n  const [activeTab, setActiveTab] = useState(\"customerInfo\");\r\n  const [popupMessage, setPopupMessage] = useState(null);\r\n  const [popupType, setPopupType] = useState(\"success\"); // or \"error\"\r\n  const [loading, setLoading] = useState(false); // State to track loading\r\n\r\n  // Add state for delete confirmation\r\n  const [deleteProductIndex, setDeleteProductIndex] = useState(null);\r\n\r\n  // Utility function to format field names\r\n  const formatFieldName = (fieldName) => {\r\n    // Custom label mapping\r\n    const customLabels = {\r\n      barCode: \"Barcode Number\",\r\n      gstrNo: \"Gst Reg No\",\r\n      gstrMob: \"Gst Reg Mob\",\r\n      gstrName: \"Gst Reg Name\",\r\n      billingPOSNo: \"Billing POS No\",\r\n      cashierId: \"Cashier ID\",\r\n      netPayableAmount: \"Net Payable Amount (Rs.)\",\r\n      subTotal: \"Sub Total (Rs.)\",\r\n      total: \"Total (Rs.)\",\r\n      clientId: \"Client ID\",\r\n      batchId: \"Batch ID\",\r\n      baseAmount: \"Base Amount (Rs.)\",\r\n      mrp: \"MRP (Rs.)\",\r\n      netAmount: \"Net Amount (Rs.)\",\r\n      paymentReferenceNo: \"Payment Reference No\"\r\n\r\n    };\r\n    if (customLabels[fieldName]) return customLabels[fieldName];\r\n\r\n    return fieldName\r\n      .replace(/([A-Z])/g, \" $1\") // Add space before capital letters\r\n      .replace(/^./, (str) => str.toUpperCase()); // Capitalize the first letter\r\n  };\r\n\r\n  // List of mandatory fields\r\n  const mandatoryFields = {\r\n    customerInfo: [\"mobile\", \"countryCode\"],\r\n    transactionInfo: [\"clientId\", \"batchId\", \"roc\"],\r\n    orderDetails: [\r\n      \"storeCode\",\r\n      \"storeAddress\",\r\n      \"billingPOSNo\",\r\n      \"netPayableAmount\",\r\n      \"orderNo\",\r\n      \"cashierId\",\r\n      \"cashierName\",\r\n      \"orderDateTime\",\r\n    ],\r\n    payments: [\"mode\", \"total\"],\r\n    productsData: [\"name\", \"productCode\", \"quantity\", \"mrp\",\"uom\", \"baseAmount\", \"netAmount\"],\r\n    billFooterData: [\"footerInfo\"],\r\n    store: [\"storeCode\"],\r\n  };\r\n\r\n  // Validation function\r\n  const isFormValid = () => {\r\n    // Customer Info\r\n    for (const field of mandatoryFields.customerInfo) {\r\n      if (\r\n        !formData.customerInfo[field] ||\r\n        formData.customerInfo[field] === \"\" ||\r\n        formData.customerInfo[field] === 0\r\n      ) {\r\n        return false;\r\n      }\r\n    }\r\n    // Transaction Info\r\n    for (const field of mandatoryFields.transactionInfo) {\r\n      if (\r\n        !formData.transactionInfo[field] ||\r\n        formData.transactionInfo[field] === \"\" ||\r\n        formData.transactionInfo[field] === 0\r\n      ) {\r\n        return false;\r\n      }\r\n    }\r\n    // Order Details\r\n    for (const field of mandatoryFields.orderDetails) {\r\n      if (\r\n        !formData.orderDetails[field] ||\r\n        formData.orderDetails[field] === \"\" ||\r\n        formData.orderDetails[field] === 0\r\n      ) {\r\n        return false;\r\n      }\r\n    }\r\n    // Payments (at least one, all mandatory fields)\r\n    if (\r\n      !formData.orderDetails.payments ||\r\n      formData.orderDetails.payments.length === 0\r\n    ) {\r\n      return false;\r\n    }\r\n    for (const payment of formData.orderDetails.payments) {\r\n      for (const field of mandatoryFields.payments) {\r\n        if (\r\n          !payment[field] ||\r\n          payment[field] === \"\" ||\r\n          payment[field] === 0\r\n        ) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    // Products Data (at least one, all mandatory fields)\r\n    if (\r\n      !formData.orderDetails.productsData ||\r\n      formData.orderDetails.productsData.length === 0\r\n    ) {\r\n      return false;\r\n    }\r\n    for (const product of formData.orderDetails.productsData) {\r\n      for (const field of mandatoryFields.productsData) {\r\n        if (\r\n          !product[field] ||\r\n          product[field] === \"\" ||\r\n          product[field] === 0\r\n        ) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    // Bill Footer Data\r\n    for (const field of mandatoryFields.billFooterData) {\r\n      if (\r\n        !formData.billFooterData[field] ||\r\n        formData.billFooterData[field] === \"\" ||\r\n        formData.billFooterData[field] === 0\r\n      ) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleChange = (e, section, key, index = null, nestedKey = null) => {\r\n    const value = e.target.type === \"number\" ? Number(e.target.value) : e.target.value;\r\n\r\n    setFormData((prev) => {\r\n      // Handle taxes inside productsData\r\n      if (nestedKey === \"productsData.taxes\" && index !== null) {\r\n        const products = [...prev.orderDetails.productsData];\r\n        const product = { ...products[index] };\r\n        product.taxes = { ...product.taxes, [key]: value };\r\n        products[index] = product;\r\n        return {\r\n          ...prev,\r\n          orderDetails: {\r\n            ...prev.orderDetails,\r\n            productsData: products,\r\n          },\r\n        };\r\n      }\r\n\r\n      // Handle taxesInfo (order-level)\r\n      if (nestedKey === \"taxesInfo\") {\r\n        return {\r\n          ...prev,\r\n          orderDetails: {\r\n            ...prev.orderDetails,\r\n            taxesInfo: {\r\n              ...prev.orderDetails.taxesInfo,\r\n              [key]: value,\r\n            },\r\n          },\r\n        };\r\n      }\r\n\r\n      if (nestedKey === \"loyaltyData\") {\r\n        return {\r\n          ...prev,\r\n          orderDetails: {\r\n            ...prev.orderDetails,\r\n            loyaltyData: {\r\n              ...prev.orderDetails.loyaltyData,\r\n              [key]: value,\r\n            },\r\n          },\r\n        };\r\n      }\r\n\r\n      // Handle other product fields\r\n      if (nestedKey === \"productsData\" && index !== null) {\r\n        const products = [...prev.orderDetails.productsData];\r\n        products[index] = { ...products[index], [key]: value };\r\n        return {\r\n          ...prev,\r\n          orderDetails: {\r\n            ...prev.orderDetails,\r\n            productsData: products,\r\n          },\r\n        };\r\n      }\r\n\r\n      // Default handler for top-level fields\r\n      if (index !== null && nestedKey === \"payments\" && section === \"orderDetails\") {\r\n        const payments = [...prev.orderDetails.payments];\r\n        payments[index] = { ...payments[index], [key]: value };\r\n        return {\r\n          ...prev,\r\n          orderDetails: {\r\n            ...prev.orderDetails,\r\n            payments,\r\n          },\r\n        };\r\n      }\r\n\r\n      if (index !== null && section === \"productsData\") {\r\n        const products = [...prev.orderDetails.productsData];\r\n        products[index] = { ...products[index], [key]: value };\r\n        return {\r\n          ...prev,\r\n          orderDetails: {\r\n            ...prev.orderDetails,\r\n            productsData: products,\r\n          },\r\n        };\r\n      }\r\n\r\n      // Top-level fields\r\n      if (section in prev) {\r\n        return {\r\n          ...prev,\r\n          [section]: {\r\n            ...prev[section],\r\n            [key]: value,\r\n          },\r\n        };\r\n      }\r\n\r\n      return prev;\r\n    });\r\n  };\r\n\r\n  const handleAddProduct = () => {\r\n    const newProduct = {\r\n      name: \"\",\r\n      description: \"\",\r\n      productCode: \"\",\r\n      quantity: 0,\r\n      mrp: 0,\r\n      uom: \"\",\r\n      baseAmount: 0,\r\n      netAmount: 250,\r\n      hsnCode: \"\",\r\n      discount: 0,\r\n      taxes: {\r\n        sgstPercent: 0,\r\n        sgst: 0,\r\n        cgstPercent: 0,\r\n        cgst: 0,\r\n        igstPercent: 0,\r\n        igst: 0,\r\n        utgstPercent: 0,\r\n        utgst: 0,\r\n      },\r\n    };\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      orderDetails: {\r\n        ...prev.orderDetails,\r\n        productsData: [...prev.orderDetails.productsData, newProduct],\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleDeleteProduct = (index) => {\r\n    setDeleteProductIndex(index); // Show confirmation prompt\r\n  };\r\n\r\n  const confirmDeleteProduct = () => {\r\n    setFormData((prev) => {\r\n      const updatedArray = [...prev.orderDetails.productsData];\r\n      updatedArray.splice(deleteProductIndex, 1);\r\n      return {\r\n        ...prev,\r\n        orderDetails: {\r\n          ...prev.orderDetails,\r\n          productsData: updatedArray,\r\n        },\r\n      };\r\n    });\r\n    setDeleteProductIndex(null); // Hide prompt after deletion\r\n  };\r\n\r\n  const cancelDeleteProduct = () => {\r\n    setDeleteProductIndex(null); // Hide prompt without deleting\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!isFormValid()) {\r\n      setPopupType(\"error\");\r\n      setPopupMessage(\"Please fill all mandatory fields marked with *.\");\r\n      return;\r\n    }\r\n    setLoading(true); // Set loading to true when the API call starts\r\n\r\n    // Clone the formData to avoid directly mutating the state\r\n    const payload = JSON.parse(JSON.stringify(formData)); // Deep clone to avoid mutation\r\n\r\n    // Helper function to recursively convert numeric fields to numbers\r\n    const convertToNumbers = (obj) => {\r\n      Object.keys(obj).forEach((key) => {\r\n        if (typeof obj[key] === \"string\" && !isNaN(obj[key])) {\r\n          obj[key] = Number(obj[key]); // Convert numeric strings to numbers\r\n        } else if (typeof obj[key] === \"object\" && obj[key] !== null) {\r\n          convertToNumbers(obj[key]); // Recursively handle nested objects\r\n        }\r\n      });\r\n    };\r\n\r\n    const convertToString = (value) => {\r\n      if (value === null || value === undefined) {\r\n        return \"\"; // Handle null or undefined values\r\n      }\r\n      return String(value); // Convert the value to a string\r\n    };\r\n\r\n    // Convert numeric fields in transactionInfo, orderDetails, and nested objects\r\n    convertToNumbers(payload.transactionInfo);\r\n    convertToNumbers(payload.orderDetails);\r\n    convertToString(payload.invoiceNo);\r\n    convertToString(payload.hsnCode);\r\n    convertToString(payload.orderNo);\r\n    convertToString(payload.orderRegNo);\r\n    convertToString(payload.billingPOSNo);\r\n    convertToString(payload.cashierId)\r\n    convertToString(payload.storeCode)\r\n    Object.keys(payload.transactionInfo).forEach((key) => {\r\n      payload.transactionInfo[key] = convertToString(payload.transactionInfo[key]);\r\n    });\r\n\r\n\r\n    const apiUrl =\r\n      \"https://testapi.pinelabs.com/v1/billing-integration/qr-payments/transactions/digital-invoice-v2/create\";\r\n      //\"http://localhost:9098/v1/billing-integration/qr-payments/transactions/digital-invoice-v2/create\";\r\n\r\n    // Construct the headers\r\n    const headers = {\r\n      Authorization: \"Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJTYlBZU2ZJOS04bklWczl3Xy1Fa3RVdWNVaURNdUZiMGM5bkpVM3hhYzdBIn0.eyJleHAiOjE3NjQ2NjI1MDksImlhdCI6MTc0OTExMDUwOSwianRpIjoiNzEwN2M5OGQtZDJkYy00ZTk4LThmZDgtZDA5YzhkYTAzZmVlIiwiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eXRlc3QucGluZWxhYnMuY29tL3JlYWxtcy9waW5lbGFicyIsInN1YiI6IjhmNzJlZjBiLTI0ZTMtNDQwZi1iZmQzLTExMTVhMDhkZjBiZCIsInR5cCI6IkJlYXJlciIsImF6cCI6Ik1lcmNoYW50QmlsbGluZ1NlcnZfMjAxNSIsImFjciI6IjEiLCJzY29wZSI6ImZldGNoLnBpbmUub25lLnRyYW5zYWN0aW9uLkdFVCBiaWxsaW5nLWludGVncmF0aW9uLnFyLXBheW1lbnRzLnRyYW5zYWN0aW9ucy5QT1NUIHYxLmJpbGxpbmctaW50ZWdyYXRpb24ucXItcGF5bWVudHMudHJhbnNhY3Rpb25zLmRpZ2l0YWwtaW52b2ljZS12Mi5jcmVhdGUuUE9TVCBiaWxsaW5nLWludGVncmF0aW9uLnFyLXBheW1lbnRzLnRyYW5zYWN0aW9ucy5HRVQgdHJhbnNhY3Rpb25fcmVhZCBiaWxsaW5nLWludGVncmF0aW9uLnFyLXBheW1lbnRzLnRyYW5zYWN0aW9ucy5jYW5jZWwuUE9TVCBvZmZsaW5lX2FjY2VzcyB2MS5iaWxsaW5nLWludGVncmF0aW9uLnFyLXBheW1lbnRzLnRyYW5zYWN0aW9ucy5kaWdpdGFsLWludm9pY2UtdjEuY3JlYXRlLlBPU1QiLCJjbGllbnRIb3N0IjoiNjkuNDguMjM2LjczIiwiZXh0SWQiOiIyMDE1IiwiTWVyY2hhbnRJZCI6IjIwMTUiLCJjbGllbnRBZGRyZXNzIjoiNjkuNDguMjM2LjczIiwiY2xpZW50X2lkIjoiTWVyY2hhbnRCaWxsaW5nU2Vydl8yMDE1In0.ZhmSGkrfv8VoxJiyquwGUGCAA-GR0XMcKvJdseot-oJ7Etx_qa-JEyOzT41lAGScnv14nCbjg6wfetOLLZTWuQ\",\r\n      \"Content-Type\": \"application/json\",\r\n      \"correlation-id\": \"123\",\r\n    };\r\n\r\n    // Log the final curl command\r\n    const curlCommand = `\r\ncurl --location '${apiUrl}' \\\\\r\n--header 'Authorization: ${headers.Authorization}' \\\\\r\n--header 'Content-Type: ${headers[\"Content-Type\"]}' \\\\\r\n--header 'correlation-id: ${headers[\"correlation-id\"]}' \\\\\r\n--data-raw '${JSON.stringify(payload, null, 2)}'\r\n    `;\r\n    console.log(\"Final CURL Command:\\n\", curlCommand);\r\n\r\n    try {\r\n      const response = await axios.post(apiUrl, payload, { headers });\r\n      setPopupType(\"success\");\r\n      setPopupMessage(\"Invoice sent successfully!\");\r\n      console.log(\"Response:\", response.data);\r\n    } catch (error) {\r\n      setPopupType(\"error\");\r\n      setPopupMessage(error.response?.data?.message || \"API call failed!\");\r\n      console.error(\"Error:\", error.response?.data || error.message);\r\n    } finally {\r\n      setLoading(false); // Set loading to false when the API call completes\r\n    }\r\n  };\r\n\r\n  const customerInfoOrder = [\r\n    \"mobile\",\r\n    \"countryCode\",\r\n    \"name\",\r\n    \"email\",\r\n    \"gstrName\",\r\n    \"gstrMob\",\r\n    \"gstrNo\",\r\n  ];\r\n\r\n  const renderFields = (section) => {\r\n    if (section === \"customerInfo\") {\r\n      return customerInfoOrder.map((key) => {\r\n        const isMandatory =\r\n          (mandatoryFields[section] && mandatoryFields[section].includes(key)) ||\r\n          false;\r\n        return (\r\n          <div key={key} className=\"form-field\">\r\n            <label className=\"field-label\">\r\n              {formatFieldName(key)}\r\n              {isMandatory && <span style={{ color: \"red\" }}> *</span>}\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={formData[section][key]}\r\n              onChange={(e) => handleChange(e, section, key)}\r\n              className=\"field-input\"\r\n            />\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n\r\n    if (section === \"productsData\") {\r\n      return (\r\n        <>\r\n          {formData.orderDetails.productsData &&\r\n            formData.orderDetails.productsData.map((product, index) => (\r\n              <div key={index} className=\"product-block\">\r\n                <div className=\"product-fields\">\r\n                  {Object.keys(product).map((key) => {\r\n                    if (key === \"taxes\") {\r\n                      // Render Taxes block\r\n                      return (\r\n                        <div key={key} className=\"form-field\">\r\n                          <h5>Taxes</h5>\r\n                          <div className=\"tax-info-block\">\r\n                            {product.taxes &&\r\n                              Object.keys(product.taxes).map((taxKey) => (\r\n                                <div key={taxKey} className=\"form-field\">\r\n                                  <label className=\"field-label\">{formatFieldName(taxKey)}</label>\r\n                                  <input\r\n                                    type=\"number\"\r\n                                    value={product.taxes[taxKey] || 0} // Default to 0 if undefined\r\n                                    onChange={(e) =>\r\n                                      handleChange(e, \"orderDetails\", taxKey, index, \"productsData.taxes\")\r\n                                    }\r\n                                    className=\"field-input\"\r\n                                  />\r\n                                </div>\r\n                              ))}\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    }\r\n                    const isMandatory =\r\n                      mandatoryFields.productsData.includes(key);\r\n                    return (\r\n                      <div key={key} className=\"form-field\">\r\n                        <label className=\"field-label\">\r\n                          {formatFieldName(key)}\r\n                          {isMandatory && <span style={{ color: \"red\" }}> *</span>}\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={product[key] || \"\"} // Default to empty string if undefined\r\n                          onChange={(e) =>\r\n                            handleChange(e, \"orderDetails\", key, index, \"productsData\")\r\n                          }\r\n                          className=\"field-input\"\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"delete-product-button\"\r\n                  onClick={() => handleDeleteProduct(index)}\r\n                >\r\n                  Delete\r\n                </button>\r\n                <hr className=\"product-separator\" />\r\n              </div>\r\n            ))}\r\n          <button\r\n            type=\"button\"\r\n            className=\"add-product-button\"\r\n            onClick={handleAddProduct}\r\n          >\r\n            Add Product\r\n          </button>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (section === \"orderDetails\") {\r\n      return (\r\n        <>\r\n          <div className=\"form-field\">\r\n            <h5>Order Details</h5>\r\n            <div className=\"order-details-block\">\r\n              {/* Render all fields in Order Details */}\r\n              {Object.keys(formData[section]).map((key) => {\r\n                if (\r\n                  key === \"productsData\" ||\r\n                  key === \"payments\" ||\r\n                  key === \"taxesInfo\" ||\r\n                  key === \"loyaltyData\"\r\n                ) {\r\n                  // Skip rendering these keys for now; we'll handle them later\r\n                  return null;\r\n                }\r\n                if (key === \"orderDateTime\") {\r\n                  // Render Order Date Time with a date-time picker including seconds\r\n                  // Custom handler to keep format as \"DD-MM-YYYY HH:mm:ss\"\r\n                  const formatDateTimeForInput = (value) => {\r\n                    // Convert \"13-09-2024 17:20:51\" to \"2024-09-13T17:20:51\"\r\n                    if (!value) return \"\";\r\n                    const [date, time] = value.split(\" \");\r\n                    if (!date || !time) return \"\";\r\n                    const [day, month, year] = date.split(\"-\");\r\n                    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}T${time}`;\r\n                  };\r\n\r\n                  const formatDateTimeForState = (value) => {\r\n                    // Convert \"2024-09-13T17:20:51\" to \"13-09-2024 17:20:51\"\r\n                    if (!value) return \"\";\r\n                    const [date, time] = value.split(\"T\");\r\n                    if (!date || !time) return \"\";\r\n                    const [year, month, day] = date.split(\"-\");\r\n                    return `${day}-${month}-${year} ${time}`;\r\n                  };\r\n\r\n                  return (\r\n                    <div key={key} className=\"form-field\">\r\n                      <label className=\"field-label\">{formatFieldName(key)}</label>\r\n                      <input\r\n                        type=\"datetime-local\"\r\n                        step=\"1\"\r\n                        value={formatDateTimeForInput(formData[section][key])}\r\n                        onChange={(e) =>\r\n                          handleChange(\r\n                            { target: { value: formatDateTimeForState(e.target.value) } },\r\n                            section,\r\n                            key\r\n                          )\r\n                        }\r\n                        className=\"field-input\"\r\n                      />\r\n                    </div>\r\n                  );\r\n                  // Add specific handling for eReceiptOpted and printOpted\r\n                    if (key === \"eReceiptOpted\" || key === \"printOpted\") {\r\n                      return (\r\n                        <div key={key} className=\"form-field\">\r\n                          <label className=\"field-label\">{formatFieldName(key)}</label>\r\n                          <select\r\n                            value={formData[section][key]}\r\n                            onChange={(e) => handleChange(e, section, key)}\r\n                            className=\"field-input\"\r\n                          >\r\n                            <option value={true}>Yes</option>\r\n                            <option value={false}>No</option>\r\n                          </select>\r\n                        </div>\r\n                      );\r\n                    }\r\n\r\n                    // Mark label with * if mandatory\r\n                    const isMandatory =\r\n                      (mandatoryFields[section] && mandatoryFields[section].includes(key)) ||\r\n                      false;\r\n\r\n                    return (\r\n                      <div key={key} className=\"form-field\">\r\n                        <label className=\"field-label\">\r\n                          {formatFieldName(key)}\r\n                          {isMandatory && <span style={{ color: \"red\" }}> *</span>}\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={formData[section][key]}\r\n                          onChange={(e) => handleChange(e, section, key)}\r\n                          className=\"field-input\"\r\n                        />\r\n                      </div>\r\n                    );\r\n                }\r\n                // Mark label with * if mandatory\r\n                const isMandatory =\r\n                  (mandatoryFields[section] && mandatoryFields[section].includes(key)) ||\r\n                  false;\r\n\r\n                return (\r\n                  <div key={key} className=\"form-field\">\r\n                    <label className=\"field-label\">\r\n                      {formatFieldName(key)}\r\n                      {isMandatory && <span style={{ color: \"red\" }}> *</span>}\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={formData[section][key]}\r\n                      onChange={(e) => handleChange(e, section, key)}\r\n                      className=\"field-input\"\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Render Payments Section */}\r\n          {formData.orderDetails.payments && (\r\n            <div className=\"form-field\">\r\n              <h5>Payments</h5>\r\n              {formData.orderDetails.payments.map((payment, index) => (\r\n                <div key={index} className=\"payment-block\">\r\n                  <div className=\"form-field\">\r\n                    <label className=\"field-label\">\r\n                      {formatFieldName(\"mode\")}\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </label>\r\n                    <select\r\n                      value={payment.mode}\r\n                      onChange={(e) =>\r\n                        handleChange(e, \"orderDetails\", \"mode\", index, \"payments\")\r\n                      }\r\n                      className=\"field-input\"\r\n                    >\r\n                      <option value=\"UPI\">UPI</option>\r\n                      <option value=\"CARD\">CARD</option>\r\n                      <option value=\"CASH\">CASH</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"form-field\">\r\n                    <label className=\"field-label\">\r\n                      {formatFieldName(\"total\")}\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={payment.total}\r\n                      onChange={(e) =>\r\n                        handleChange(e, \"orderDetails\", \"total\", index, \"payments\")\r\n                      }\r\n                      className=\"field-input\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-field\">\r\n                    <label className=\"field-label\">{formatFieldName(\"status\")}</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={payment.status}\r\n                      onChange={(e) =>\r\n                        handleChange(e, \"orderDetails\", \"status\", index, \"payments\")\r\n                      }\r\n                      className=\"field-input\"\r\n                    />\r\n                  </div>\r\n                  \r\n                   <div className=\"form-field\">\r\n                    <label className=\"field-label\">{formatFieldName(\"paymentReferenceNo\")}</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={payment.paymentReferenceNo}\r\n                      onChange={(e) =>\r\n                        handleChange(e, \"orderDetails\", \"paymentReferenceNo\", index, \"payments\")\r\n                      }\r\n                      className=\"field-input\"\r\n                    />\r\n                  </div>\r\n                  \r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          {/* Render Taxes Info Section */}\r\n          {formData.orderDetails.taxesInfo && (\r\n            <div className=\"form-field\">\r\n              <h5>Taxes Info</h5>\r\n              <div className=\"tax-info-block\">\r\n                {Object.keys(formData.orderDetails.taxesInfo).map((taxKey) => (\r\n                  <div key={taxKey} className=\"form-field\">\r\n                    <label className=\"field-label\">{formatFieldName(taxKey)}</label>\r\n                    <input\r\n                      type=\"number\" // Ensure numeric input\r\n                      value={formData.orderDetails.taxesInfo[taxKey] || \"\"} // Ensure value is a number\r\n                      onChange={(e) =>\r\n                        handleChange(e, \"orderDetails\", taxKey, null, \"taxesInfo\")\r\n                      }\r\n                      className=\"field-input\"\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Render Loyalty Data Section */}\r\n          {formData.orderDetails.loyaltyData && (\r\n            <div className=\"form-field\">\r\n              <h5>Loyalty Data</h5>\r\n              <div className=\"loyalty-data-block\">\r\n                {Object.keys(formData.orderDetails.loyaltyData).map((loyaltyKey) => (\r\n                  <div key={loyaltyKey} className=\"form-field\">\r\n                    <label className=\"field-label\">{formatFieldName(loyaltyKey)}</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={formData.orderDetails.loyaltyData[loyaltyKey]}\r\n                      onChange={(e) =>\r\n                        handleChange(e, \"orderDetails\", loyaltyKey, null, \"loyaltyData\")\r\n                      }\r\n                      className=\"field-input\"\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n    \r\n    if (section === \"store\") {\r\n      return (\r\n        <>\r\n          <div className=\"form-field\">\r\n            <h5>Store Details</h5>\r\n            <div className=\"store-details-block\">\r\n              {/* Render Address Fields */}\r\n              {Object.keys(formData[section].address).map((key) => (\r\n                <div key={key} className=\"form-field\">\r\n                  <label className=\"field-label\">{formatFieldName(key)}</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData[section].address[key]}\r\n                    onChange={(e) =>\r\n                      handleChange(e, section, key, null, \"address\")\r\n                    }\r\n                    className=\"field-input\"\r\n                  />\r\n                </div>\r\n              ))}\r\n\r\n              {/* Render Other Store Fields */}\r\n              {Object.keys(formData[section]).map((key) => {\r\n                if (key === \"address\") return null; // Skip address (already rendered)\r\n\r\n                return (\r\n                  <div key={key} className=\"form-field\">\r\n                    <label className=\"field-label\">{formatFieldName(key)}</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={formData[section][key]}\r\n                      onChange={(e) => handleChange(e, section, key)}\r\n                      className=\"field-input\"\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return Object.keys(formData[section]).map((key) => {\r\n      // Add dropdown for txnType in transactionInfo\r\n      if (section === \"transactionInfo\" && key === \"txnType\") {\r\n        return (\r\n          <div key={key} className=\"form-field\">\r\n            <label className=\"field-label\">{formatFieldName(key)}</label>\r\n            <select\r\n              value={formData[section][key]}\r\n              onChange={(e) => handleChange(e, section, key)}\r\n              className=\"field-input\"\r\n            >\r\n              <option value=\"UPI\">UPI</option>\r\n              <option value=\"CARD\">CARD</option>\r\n              <option value=\"CASH\">CASH</option>\r\n            </select>\r\n          </div>\r\n        );\r\n      }\r\n      // Mark label with * if mandatory\r\n      const isMandatory =\r\n        (mandatoryFields[section] && mandatoryFields[section].includes(key)) ||\r\n        false;\r\n\r\n      return (\r\n        <div key={key} className=\"form-field\">\r\n          <label className=\"field-label\">\r\n            {formatFieldName(key)}\r\n            {isMandatory && <span style={{ color: \"red\" }}> *</span>}\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData[section][key]}\r\n            onChange={(e) => handleChange(e, section, key)}\r\n            className=\"field-input\"\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h1 className=\"form-title\">Digital Invoice Form</h1>\r\n      <div className={`tabs ${popupMessage ? \"popup-active\" : \"\"}`}>\r\n        <button\r\n          className={`tab-button ${activeTab === \"customerInfo\" ? \"active\" : \"\"}`}\r\n          onClick={() => setActiveTab(\"customerInfo\")}\r\n        >\r\n          Customer Info\r\n        </button>\r\n        <button\r\n          className={`tab-button ${activeTab === \"transactionInfo\" ? \"active\" : \"\"}`}\r\n          onClick={() => setActiveTab(\"transactionInfo\")}\r\n        >\r\n          Transaction Info\r\n        </button>\r\n        <button\r\n          className={`tab-button ${activeTab === \"orderDetails\" ? \"active\" : \"\"}`}\r\n          onClick={() => setActiveTab(\"orderDetails\")}\r\n        >\r\n          Order Info\r\n        </button>\r\n        <button\r\n          className={`tab-button ${activeTab === \"productsData\" ? \"active\" : \"\"}`}\r\n          onClick={() => setActiveTab(\"productsData\")}\r\n        >\r\n          Product Info\r\n        </button>\r\n        <button\r\n          className={`tab-button ${activeTab === \"billFooterData\" ? \"active\" : \"\"}`}\r\n          onClick={() => setActiveTab(\"billFooterData\")}\r\n        >\r\n          Bill Footer Info\r\n        </button>\r\n        <button\r\n          className={`tab-button ${activeTab === \"store\" ? \"active\" : \"\"}`}\r\n          onClick={() => setActiveTab(\"store\")}\r\n        >\r\n          Store Info\r\n        </button>\r\n      </div>\r\n      <form onSubmit={handleSubmit} className={`form ${popupMessage ? \"popup-active\" : \"\"}`}>\r\n        {activeTab === \"customerInfo\" && (\r\n          <div className=\"form-section\">{renderFields(\"customerInfo\")}</div>\r\n        )}\r\n        {activeTab === \"transactionInfo\" && (\r\n          <div className=\"form-section\">{renderFields(\"transactionInfo\")}</div>\r\n        )}\r\n        {activeTab === \"orderDetails\" && (\r\n          <div className=\"form-section\">{renderFields(\"orderDetails\")}</div>\r\n        )}\r\n        {activeTab === \"productsData\" && (\r\n          <div className=\"form-section\">{renderFields(\"productsData\")}</div>\r\n        )}\r\n        {activeTab === \"billFooterData\" && (\r\n          <div className=\"form-section\">{renderFields(\"billFooterData\")}</div>\r\n        )}\r\n        {activeTab === \"store\" && (\r\n          <div className=\"form-section\">{renderFields(\"store\")}</div>\r\n        )}\r\n        <button\r\n          type=\"submit\"\r\n          className=\"submit-button\"\r\n          disabled={!isFormValid()}\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n      {loading && (\r\n  <div className=\"loading-toast\">\r\n    <div className=\"spinner\"></div>\r\n  </div>\r\n)}\r\n      {popupMessage && (\r\n        <div className={`popup ${popupType}`}>\r\n          <h3>{popupType === \"success\" ? \"Success\" : \"Error\"}</h3>\r\n          <p>{popupMessage}</p>\r\n          <button onClick={() => setPopupMessage(null)}>Close</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Delete confirmation prompt */}\r\n      {deleteProductIndex !== null && (\r\n        <div className=\"popup\">\r\n          <h3>Delete Product</h3>\r\n          <p>Do you want to delete this product?</p>\r\n          <div style={{ display: \"flex\", gap: \"12px\", justifyContent: \"center\" }}>\r\n            <button onClick={confirmDeleteProduct}>Yes</button>\r\n            <button onClick={cancelDeleteProduct}>No</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DigitalInvoiceForm;","import React from \"react\";\r\nimport DigitalInvoiceForm from \"./components/DigitalInvoiceForm\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <div className=\"logo\">\r\n        <div className=\"logo-text\">PINE LABS</div>\r\n      </div>\r\n      <DigitalInvoiceForm />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './styles/App.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}