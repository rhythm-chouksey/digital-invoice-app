{"version":3,"sources":["components/DigitalInvoiceForm.jsx","App.jsx","index.jsx"],"names":["DigitalInvoiceForm","formData","setFormData","useState","customerInfo","mobile","name","email","countryCode","gstrName","gstrMob","gstrNo","transactionInfo","clientId","batchId","roc","txnId","txnType","orderDetails","storeCode","storeAddress","billingPOSNo","netPayableAmount","subTotal","rounding","taxesInfo","cgstPercent","sgstPercent","igstPercent","utgstPercent","cgst","sgst","igst","utgst","payments","mode","total","status","orderNo","orderRegNo","productsData","description","productCode","quantity","unitAmount","totalAmount","hsnCode","discount","taxes","purchasedPieces","invoiceNo","barCode","loyaltyData","type","cardNum","pointsEarned","walletAmount","amountSaved","pointsRedeemed","cashierId","cashierName","orderDateTime","billFooterData","disclaimer","purchaseTerms","feedbackCode","feedbackDiscount","feedbackLink","orderInstructions","footerInfo","activeTab","setActiveTab","popupMessage","setPopupMessage","popupType","setPopupType","loading","setLoading","formatFieldName","fieldName","replace","str","toUpperCase","handleChange","e","section","key","index","arguments","length","undefined","nestedKey","value","target","prev","updatedArray","handleAddProduct","newProduct","renderFields","_jsxs","_Fragment","children","map","product","className","_jsx","Object","keys","taxKey","onChange","onClick","splice","handleDeleteProduct","payment","loyaltyKey","onSubmit","async","preventDefault","apiUrl","payload","headers","Authorization","curlCommand","JSON","stringify","console","log","response","axios","post","data","error","_error$response","_error$response$data","_error$response2","message","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2216ded0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./DigitalInvoiceForm.css\";\r\n\r\nfunction DigitalInvoiceForm() {\r\n  const defaultFormData = {\r\n    customerInfo: {\r\n      mobile: \"7906059714\",\r\n      name: \"Aarav Rubral\",\r\n      email: \"customer_6383575597@example.com\",\r\n      countryCode: \"+91\",\r\n      gstrName: \"Ramandeep\",\r\n      gstrMob: \"9764775793\",\r\n      gstrNo: \"217686439898\",\r\n    },\r\n    transactionInfo: {\r\n      clientId: \"123454\",\r\n      batchId: \"09865\",\r\n      roc: \"876767\",\r\n      txnId: \"97785\",\r\n      txnType: \"UPI\",\r\n    },\r\n    orderDetails: {\r\n      storeCode: \"9991\",\r\n      storeAddress: \"Connaught Plaza Restaurants Pvt.Ltd.\",\r\n      billingPOSNo: \"101\",\r\n      netPayableAmount: 13196,\r\n      subTotal: 11782.12,\r\n      rounding: 0,\r\n      taxesInfo: {\r\n        cgstPercent: 9,\r\n        sgstPercent: 9,\r\n        igstPercent: 9,\r\n        utgstPercent: 9,\r\n        cgst: 148.5,\r\n        sgst: 148.5,\r\n        igst: 148.5,\r\n        utgst: 148.5,\r\n      },\r\n      payments: [\r\n        {\r\n          mode: \"UPI\",\r\n          total: 13196,\r\n          status: \"SUCCESS\",\r\n        },\r\n      ],\r\n      orderNo: \"28\",\r\n      orderRegNo: \"1\",\r\n      productsData: [\r\n        {\r\n          name: \"BLACK LOGO PRINT CREW NECK T-SHIRT\",\r\n          description: \"Premium t-shirt\",\r\n          productCode: \"A123\",\r\n          quantity: 1,\r\n          unitAmount: 300,\r\n          totalAmount: 250,\r\n          hsnCode: \"6276462\",\r\n          discount: 50,\r\n          taxes: {\r\n            sgstPercent: 6,\r\n            sgst: 8,\r\n            cgstPercent: 6,\r\n            cgst: 8,\r\n            igstPercent: 6,\r\n            igst: 8,\r\n            utgstPercent: 6,\r\n            utgst: 3,\r\n          },\r\n        },\r\n        {\r\n          name: \"BLACK LOGO RISE WASHED GLENN SLIM FIT JEANS\",\r\n          description: \"BLACK LOGO RISE WASHED GLENN SLIM FIT JEANS\",\r\n          productCode: \"A124\",\r\n          quantity: 2,\r\n          unitAmount: 700,\r\n          totalAmount: 1400,\r\n          hsnCode: \"6276462\",\r\n          discount: 0,\r\n          taxes: {\r\n            sgstPercent: 6,\r\n            sgst: 8,\r\n            cgstPercent: 6,\r\n            cgst: 8,\r\n            igstPercent: 6,\r\n            igst: 8,\r\n            utgstPercent: 6,\r\n            utgst: 3,\r\n          },\r\n        },\r\n      ],\r\n      purchasedPieces: 3,\r\n      invoiceNo: \"5286\",\r\n      barCode: \"barcode_data\",\r\n      loyaltyData: {\r\n        type: \"cashback\",\r\n        cardNum: \"V1218199412\",\r\n        pointsEarned: 127,\r\n        walletAmount: 1500,\r\n        amountSaved: 50,\r\n        pointsRedeemed: 127,\r\n      },\r\n      cashierId: \"475117\",\r\n      cashierName: \"Krishna\",\r\n      orderDateTime: \"13-09-2024 17:20:51\",\r\n    },\r\n    billFooterData: {\r\n      disclaimer: \"disclaimer testing\",\r\n      purchaseTerms: \"https://company.co.in/\",\r\n      feedbackCode: \"LTE123\",\r\n      feedbackDiscount: 0,\r\n      feedbackLink: \"https://company.co.in/\",\r\n      orderInstructions: \"Please provide black Umbrella\",\r\n      footerInfo: \"GSTIN-27AAAFH1333H1ZT         \\n         GST Classification -         \\n    Restaurant Services SAC-996331    \\n        FSSAI : 11517007000202        \\n We value your feedback. Share it to: \\n     myfeedback@mcdonaldsindia.com     \\n # The collection of donation is done \\n  on behalf of Ronald McDonald House  \\nCharities Foundation India (RMHC India)\\n  on a principal-to-principal basis.\",\r\n    },\r\n  };\r\n\r\n  const [formData, setFormData] = useState(defaultFormData);\r\n  const [activeTab, setActiveTab] = useState(\"customerInfo\");\r\n  const [popupMessage, setPopupMessage] = useState(null);\r\n  const [popupType, setPopupType] = useState(\"success\"); // or \"error\"\r\n  const [loading, setLoading] = useState(false); // State to track loading\r\n\r\n  // Utility function to format field names\r\n  const formatFieldName = (fieldName) => {\r\n    return fieldName\r\n      .replace(/([A-Z])/g, \" $1\") // Add space before capital letters\r\n      .replace(/^./, (str) => str.toUpperCase()); // Capitalize the first letter\r\n  };\r\n\r\n  const handleChange = (e, section, key, index = null, nestedKey = null) => {\r\n    const value = e.target.value; // Always treat input as a string\r\n\r\n    setFormData((prev) => {\r\n      if (nestedKey && index !== null) {\r\n        // Update deeply nested fields (e.g., taxes in productsData)\r\n        const updatedArray = [...prev[section].productsData];\r\n        updatedArray[index][nestedKey][key] = value;\r\n        return {\r\n          ...prev,\r\n          [section]: {\r\n            ...prev[section],\r\n            productsData: updatedArray,\r\n          },\r\n        };\r\n      } else if (nestedKey) {\r\n        // Update nested objects (e.g., loyaltyData or taxesInfo)\r\n        return {\r\n          ...prev,\r\n          [section]: {\r\n            ...prev[section],\r\n            [nestedKey]: {\r\n              ...prev[section][nestedKey],\r\n              [key]: value,\r\n            },\r\n          },\r\n        };\r\n      } else if (index !== null) {\r\n        // Update array fields (e.g., productsData)\r\n        const updatedArray = [...prev[section].productsData];\r\n        updatedArray[index][key] = value;\r\n        return {\r\n          ...prev,\r\n          [section]: {\r\n            ...prev[section],\r\n            productsData: updatedArray,\r\n          },\r\n        };\r\n      }\r\n      // Update top-level fields\r\n      return {\r\n        ...prev,\r\n        [section]: {\r\n          ...prev[section],\r\n          [key]: value,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleAddProduct = () => {\r\n    const newProduct = {\r\n      name: \"\",\r\n      description: \"\",\r\n      productCode: \"\",\r\n      quantity: 0,\r\n      unitAmount: 0,\r\n      totalAmount: 0,\r\n      hsnCode: \"\",\r\n      discount: 0,\r\n      taxes: {\r\n        sgstPercent: 0,\r\n        sgst: 0,\r\n        cgstPercent: 0,\r\n        cgst: 0,\r\n        igstPercent: 0,\r\n        igst: 0,\r\n        utgstPercent: 0,\r\n        utgst: 0,\r\n      },\r\n    };\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      orderDetails: {\r\n        ...prev.orderDetails,\r\n        productsData: [...prev.orderDetails.productsData, newProduct],\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleDeleteProduct = (index) => {\r\n    setFormData((prev) => {\r\n      const updatedArray = [...prev.orderDetails.productsData];\r\n      updatedArray.splice(index, 1); // Remove the product at the given index\r\n      return {\r\n        ...prev,\r\n        orderDetails: {\r\n          ...prev.orderDetails,\r\n          productsData: updatedArray,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true); // Set loading to true when the API call starts\r\n\r\n    const apiUrl =\r\n      \"https://testapi.pinelabs.com/v1/billing-integration/qr-payments/transactions/digital-invoice-v2/create\";\r\n\r\n    // Use formData as the payload\r\n    const payload = formData;\r\n\r\n    // Construct the headers\r\n    const headers = {\r\n      Authorization:\r\n        \"Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJTYlBZU2ZJOS04bklWczl3Xy1Fa3RVdWNVaURNdUZiMGM5bkpVM3hhYzdBIn0.eyJleHAiOjE3NjEwMjQzMjksImlhdCI6MTc0NTQ3MjMyOSwianRpIjoiMjFkOTJlYjYtZDdiNi00ZmM3LTk0NDktMWI2Mjk5MTExMzJhIiwiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eXRlc3QucGluZWxhYnMuY29tL3JlYWxtcy9waW5lbGFicyIsInN1YiI6IjhmNzJlZjBiLTI0ZTMtNDQwZi1iZmQzLTExMTVhMDhkZjBiZCIsInR5cCI6IkJlYXJlciIsImF6cCI6Ik1lcmNoYW50QmlsbGluZ1NlcnZfMjAxNSIsImFjciI6IjEiLCJzY29wZSI6ImZldGNoLnBpbmUub25lLnRyYW5zYWN0aW9uLkdFVCBiaWxsaW5nLWludGVncmF0aW9uLnFyLXBheW1lbnRzLnRyYW5zYWN0aW9ucy5QT1NUIHYxLmJpbGxpbmctaW50ZWdyYXRpb24ucXItcGF5bWVudHMudHJhbnNhY3Rpb25zLmRpZ2l0YWwtaW52b2ljZS12Mi5jcmVhdGUuUE9TVCBiaWxsaW5nLWludGVncmF0aW9uLnFyLXBheW1lbnRzLnRyYW5zYWN0aW9ucy5HRVQgYmlsbGluZy1pbnRlZ3JhdGlvbi5xci1wYXltZW50cy50cmFuc2FjdGlvbnMuY2FuY2VsLlBPU1Qgb2ZmbGluZV9hY2Nlc3MgdjEuYmlsbGluZy1pbnRlZ3JhdGlvbi5xci1wYXltZW50cy50cmFuc2FjdGlvbnMuZGlnaXRhbC1pbnZvaWNlLXYxLmNyZWF0ZS5QT1NUIiwiY2xpZW50SG9zdCI6IjE0LjE0My4xMjAuODIiLCJleHRJZCI6IjIwMTUiLCJNZXJjaGFudElkIjoiMjAxNSIsImNsaWVudEFkZHJlc3MiOiIxNC4xNDMuMTIwLjgyIiwiY2xpZW50X2lkIjoiTWVyY2hhbnRCaWxsaW5nU2Vydl8yMDE1In0.DtG1R--rgd9HZccykXXeD7N13YCOStPTKsVMIDsDSn2VMHdBu7_Erwktt2YCm_k3tV5LMH4pwQYN6NAWGnDNlQ\",\r\n      \"Content-Type\": \"application/json\",\r\n      \"correlation-id\": \"123455\",\r\n    };\r\n\r\n    // Construct the curl command\r\n    const curlCommand = `\r\ncurl -X POST ${apiUrl} \\\\\r\n-H \"Authorization: ${headers.Authorization}\" \\\\\r\n-H \"Content-Type: ${headers[\"Content-Type\"]}\" \\\\\r\n-H \"correlation-id: ${headers[\"correlation-id\"]}\" \\\\\r\n-d '${JSON.stringify(payload, null, 2)}'\r\n  `;\r\n    console.log(\"CURL Command:\", curlCommand); // Log the curl command\r\n\r\n    try {\r\n      const response = await axios.post(apiUrl, payload, { headers });\r\n      setPopupType(\"success\");\r\n      setPopupMessage(\"Invoice uploaded successfully!\"); // Updated success message\r\n      console.log(\"Response:\", response.data);\r\n    } catch (error) {\r\n      setPopupType(\"error\");\r\n      setPopupMessage(error.response?.data?.message || \"API call failed!\");\r\n      console.error(\"Error:\", error.response?.data || error.message);\r\n    } finally {\r\n      setLoading(false); // Set loading to false when the API call completes\r\n    }\r\n  };\r\n\r\n  const renderFields = (section) => {\r\n    if (section === \"productsData\") {\r\n      return (\r\n        <>\r\n          {formData.orderDetails.productsData.map((product, index) => (\r\n            <div key={index} className=\"product-block\">\r\n              <h3>Product {index + 1}</h3>\r\n              <div className=\"product-fields\">\r\n                {Object.keys(product).map((key) => {\r\n                  if (key === \"taxes\") {\r\n                    // Render Taxes block\r\n                    return (\r\n                      <div key={key} className=\"form-field\">\r\n                        <h5>Taxes</h5>\r\n                        <div className=\"tax-info-block\">\r\n                          {Object.keys(product.taxes).map((taxKey) => (\r\n                            <div key={taxKey} className=\"form-field\">\r\n                              <label className=\"field-label\">{formatFieldName(taxKey)}</label>\r\n                              <input\r\n                                type=\"number\"\r\n                                value={product.taxes[taxKey]}\r\n                                onChange={(e) =>\r\n                                  handleChange(e, \"orderDetails\", taxKey, index, \"taxes\")\r\n                                }\r\n                                className=\"field-input\"\r\n                              />\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  }\r\n                  return (\r\n                    <div key={key} className=\"form-field\">\r\n                      <label className=\"field-label\">{formatFieldName(key)}</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={product[key]}\r\n                        onChange={(e) => handleChange(e, \"orderDetails\", key, index)}\r\n                        className=\"field-input\"\r\n                      />\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"delete-product-button\"\r\n                onClick={() => handleDeleteProduct(index)}\r\n              >\r\n                Delete\r\n              </button>\r\n              <hr className=\"product-separator\" />\r\n            </div>\r\n          ))}\r\n          <button\r\n            type=\"button\"\r\n            className=\"add-product-button\"\r\n            onClick={handleAddProduct}\r\n          >\r\n            Add Product\r\n          </button>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (section === \"orderDetails\") {\r\n      return (\r\n        <>\r\n          {/* Group other order details fields */}\r\n          <div className=\"form-field\">\r\n            <h5>Order Details</h5>\r\n            <div className=\"order-details-block\">\r\n              {Object.keys(formData[section]).map((key) => {\r\n                if (key === \"productsData\" || key === \"payments\" || key === \"taxesInfo\" || key === \"loyaltyData\") {\r\n                  // Skip rendering these keys for now; we'll handle them later\r\n                  return null;\r\n                }\r\n                return (\r\n                  <div key={key} className=\"form-field\">\r\n                    <label className=\"field-label\">{formatFieldName(key)}</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={formData[section][key]}\r\n                      onChange={(e) => handleChange(e, section, key)}\r\n                      className=\"field-input\"\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Render Payments Section */}\r\n          {formData.orderDetails.payments && (\r\n            <div className=\"form-field\">\r\n              <h5>Payments</h5>\r\n              {formData.orderDetails.payments.map((payment, index) => (\r\n                <div key={index} className=\"payment-block\">\r\n                  <div className=\"form-field\">\r\n                    <label className=\"field-label\">Mode</label>\r\n                    <select\r\n                      value={payment.mode}\r\n                      onChange={(e) =>\r\n                        handleChange(e, \"orderDetails\", \"mode\", index, \"payments\")\r\n                      }\r\n                      className=\"field-input\"\r\n                    >\r\n                      <option value=\"UPI\">UPI</option>\r\n                      <option value=\"CARD\">CARD</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"form-field\">\r\n                    <label className=\"field-label\">Total</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={payment.total}\r\n                      onChange={(e) =>\r\n                        handleChange(e, \"orderDetails\", \"total\", index, \"payments\")\r\n                      }\r\n                      className=\"field-input\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          {/* Render Taxes Info Section */}\r\n          {formData.orderDetails.taxesInfo && (\r\n            <div className=\"form-field\">\r\n              <h5>Taxes Info</h5>\r\n              <div className=\"tax-info-block\">\r\n                {Object.keys(formData.orderDetails.taxesInfo).map((taxKey) => {\r\n                  if (taxKey === \"cgstPercent\") {\r\n                    // Skip rendering cgstPercent\r\n                    return null;\r\n                  }\r\n                  return (\r\n                    <div key={taxKey} className=\"form-field\">\r\n                      <label className=\"field-label\">{formatFieldName(taxKey)}</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        value={formData.orderDetails.taxesInfo[taxKey]}\r\n                        onChange={(e) =>\r\n                          handleChange(e, \"orderDetails\", taxKey, null, \"taxesInfo\")\r\n                        }\r\n                        className=\"field-input\"\r\n                      />\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Render Loyalty Data Section */}\r\n          {formData.orderDetails.loyaltyData && (\r\n            <div className=\"form-field\">\r\n              <h5>Loyalty Data</h5>\r\n              <div className=\"loyalty-data-block\">\r\n                {Object.keys(formData.orderDetails.loyaltyData).map((loyaltyKey) => (\r\n                  <div key={loyaltyKey} className=\"form-field\">\r\n                    <label className=\"field-label\">{formatFieldName(loyaltyKey)}</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={formData.orderDetails.loyaltyData[loyaltyKey]}\r\n                      onChange={(e) =>\r\n                        handleChange(e, \"orderDetails\", loyaltyKey, null, \"loyaltyData\")\r\n                      }\r\n                      className=\"field-input\"\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n\r\n    return Object.keys(formData[section]).map((key) => (\r\n      <div key={key} className=\"form-field\">\r\n        <label className=\"field-label\">{formatFieldName(key)}</label>\r\n        <input\r\n          type=\"text\"\r\n          value={formData[section][key]}\r\n          onChange={(e) => handleChange(e, section, key)}\r\n          className=\"field-input\"\r\n        />\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h1 className=\"form-title\">Digital Invoice Form</h1>\r\n      <div className={`tabs ${popupMessage ? \"popup-active\" : \"\"}`}>\r\n        <button\r\n          className={`tab-button ${activeTab === \"customerInfo\" ? \"active\" : \"\"}`}\r\n          onClick={() => setActiveTab(\"customerInfo\")}\r\n        >\r\n          Customer Info\r\n        </button>\r\n        <button\r\n          className={`tab-button ${activeTab === \"transactionInfo\" ? \"active\" : \"\"}`}\r\n          onClick={() => setActiveTab(\"transactionInfo\")}\r\n        >\r\n          Transaction Info\r\n        </button>\r\n        <button\r\n          className={`tab-button ${activeTab === \"orderDetails\" ? \"active\" : \"\"}`}\r\n          onClick={() => setActiveTab(\"orderDetails\")}\r\n        >\r\n          Order Details\r\n        </button>\r\n        <button\r\n          className={`tab-button ${activeTab === \"productsData\" ? \"active\" : \"\"}`}\r\n          onClick={() => setActiveTab(\"productsData\")}\r\n        >\r\n          Product Data\r\n        </button>\r\n        <button\r\n          className={`tab-button ${activeTab === \"billFooterData\" ? \"active\" : \"\"}`}\r\n          onClick={() => setActiveTab(\"billFooterData\")}\r\n        >\r\n          Bill Footer Data\r\n        </button>\r\n      </div>\r\n      <form onSubmit={handleSubmit} className={`form ${popupMessage ? \"popup-active\" : \"\"}`}>\r\n        {activeTab === \"customerInfo\" && (\r\n          <div className=\"form-section\">{renderFields(\"customerInfo\")}</div>\r\n        )}\r\n        {activeTab === \"transactionInfo\" && (\r\n          <div className=\"form-section\">{renderFields(\"transactionInfo\")}</div>\r\n        )}\r\n        {activeTab === \"orderDetails\" && (\r\n          <div className=\"form-section\">{renderFields(\"orderDetails\")}</div>\r\n        )}\r\n        {activeTab === \"productsData\" && (\r\n          <div className=\"form-section\">{renderFields(\"productsData\")}</div>\r\n        )}\r\n        {activeTab === \"billFooterData\" && (\r\n          <div className=\"form-section\">{renderFields(\"billFooterData\")}</div>\r\n        )}\r\n        <button type=\"submit\" className=\"submit-button\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n      {loading && (\r\n  <div className=\"loading-toast\">\r\n    <div className=\"spinner\"></div>\r\n  </div>\r\n)}\r\n      {popupMessage && (\r\n        <div className={`popup ${popupType}`}>\r\n          <h3>{popupType === \"success\" ? \"Success\" : \"Error\"}</h3>\r\n          <p>{popupMessage}</p>\r\n          <button onClick={() => setPopupMessage(null)}>Close</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DigitalInvoiceForm;","import React from \"react\";\nimport DigitalInvoiceForm from \"./components/DigitalInvoiceForm\";\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"logo\">\n        <div className=\"logo-text\">PINE LABS</div>\n      </div>\n      <DigitalInvoiceForm />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/App.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}