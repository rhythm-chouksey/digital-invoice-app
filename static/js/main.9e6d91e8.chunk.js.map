{"version":3,"sources":["components/DigitalInvoiceForm.jsx","App.jsx","index.jsx"],"names":["DigitalInvoiceForm","formData","setFormData","useState","customerInfo","mobile","name","email","countryCode","gstrName","gstrMob","gstrNo","transactionInfo","clientId","batchId","roc","txnId","txnType","orderDetails","storeCode","storeAddress","billingPOSNo","netPayableAmount","subTotal","rounding","taxesInfo","cgstPercent","sgstPercent","igstPercent","utgstPercent","cgst","sgst","igst","utgst","payments","mode","total","status","orderNo","orderRegNo","productsData","description","productCode","quantity","unitAmount","totalAmount","hsnCode","discount","taxes","purchasedPieces","invoiceNo","barCode","loyaltyData","type","cardNum","pointsEarned","walletAmount","amountSaved","pointsRedeemed","cashierId","cashierName","orderDateTime","billFooterData","disclaimer","purchaseTerms","feedbackCode","feedbackDiscount","feedbackLink","orderInstructions","footerInfo","activeTab","setActiveTab","popupMessage","setPopupMessage","popupType","setPopupType","loading","setLoading","formatFieldName","fieldName","replace","str","toUpperCase","handleChange","e","section","key","index","arguments","length","undefined","nestedKey","value","target","Number","prev","updatedFormData","nestedKeys","split","i","handleAddProduct","newProduct","renderFields","_jsxs","_Fragment","children","map","product","className","_jsx","Object","keys","taxKey","onChange","onClick","updatedArray","splice","handleDeleteProduct","step","payment","loyaltyKey","onSubmit","async","preventDefault","payload","JSON","parse","stringify","convertToNumbers","obj","forEach","isNaN","convertToString","String","apiUrl","headers","Authorization","curlCommand","console","log","response","axios","post","data","error","_error$response","_error$response$data","_error$response2","message","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e6d91e8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./DigitalInvoiceForm.css\";\r\n\r\nfunction DigitalInvoiceForm() {\r\n  const defaultFormData = {\r\n    customerInfo: {\r\n      mobile: \"7906059714\",\r\n      name: \"Aarav Rubral\",\r\n      email: \"customer_6383575597@example.com\",\r\n      countryCode: \"+91\",\r\n      gstrName: \"Ramandeep\",\r\n      gstrMob: \"9764775793\",\r\n      gstrNo: \"217686439898\",\r\n    },\r\n    transactionInfo: {\r\n      clientId: \"0\",\r\n      batchId: \"0\",\r\n      roc: \"0\",\r\n      txnId: \"0\",\r\n      txnType: \"UPI\",\r\n    },\r\n    orderDetails: {\r\n      storeCode: \"9991\",\r\n      storeAddress: \"Connaught Plaza Restaurants Pvt.Ltd.\",\r\n      billingPOSNo: \"101\",\r\n      netPayableAmount: 13196,\r\n      subTotal: 11782.12,\r\n      rounding: 0,\r\n      taxesInfo: {\r\n        cgstPercent: 9,\r\n        sgstPercent: 9,\r\n        igstPercent: 9,\r\n        utgstPercent: 9,\r\n        cgst: 148.5,\r\n        sgst: 148.5,\r\n        igst: 148.5,\r\n        utgst: 148.5,\r\n      },\r\n      payments: [\r\n        {\r\n          mode: \"UPI\",\r\n          total: 13196,\r\n          status: \"SUCCESS\",\r\n        },\r\n      ],\r\n      orderNo: \"28\",\r\n      orderRegNo: \"1\",\r\n      productsData: [\r\n        {\r\n          name: \"BLACK LOGO PRINT CREW NECK T-SHIRT\",\r\n          description: \"Premium t-shirt\",\r\n          productCode: \"A123\",\r\n          quantity: 1,\r\n          unitAmount: 300,\r\n          totalAmount: 250,\r\n          hsnCode: \"6276462\",\r\n          discount: 50,\r\n          taxes: {\r\n            sgstPercent: 6,\r\n            sgst: 8,\r\n            cgstPercent: 6,\r\n            cgst: 8,\r\n            igstPercent: 6,\r\n            igst: 8,\r\n            utgstPercent: 6,\r\n            utgst: 3,\r\n          },\r\n        },\r\n        {\r\n          name: \"BLACK LOGO RISE WASHED GLENN SLIM FIT JEANS\",\r\n          description: \"BLACK LOGO RISE WASHED GLENN SLIM FIT JEANS\",\r\n          productCode: \"A124\",\r\n          quantity: 2,\r\n          unitAmount: 700,\r\n          totalAmount: 1400,\r\n          hsnCode: \"6276462\",\r\n          discount: 0,\r\n          taxes: {\r\n            sgstPercent: 6,\r\n            sgst: 8,\r\n            cgstPercent: 6,\r\n            cgst: 8,\r\n            igstPercent: 6,\r\n            igst: 8,\r\n            utgstPercent: 6,\r\n            utgst: 3,\r\n          },\r\n        },\r\n      ],\r\n      purchasedPieces: 3,\r\n      invoiceNo: \"5286\",\r\n      barCode: \"barcode_data\",\r\n      loyaltyData: {\r\n        type: \"cashback\",\r\n        cardNum: \"V1218199412\",\r\n        pointsEarned: 127,\r\n        walletAmount: 1500,\r\n        amountSaved: 50,\r\n        pointsRedeemed: 127,\r\n      },\r\n      cashierId: \"475117\",\r\n      cashierName: \"Krishna\",\r\n      orderDateTime: \"13-09-2024 17:20:51\",\r\n    },\r\n    billFooterData: {\r\n      disclaimer: \"disclaimer testing\",\r\n      purchaseTerms: \"https://company.co.in/\",\r\n      feedbackCode: \"LTE123\",\r\n      feedbackDiscount: 0,\r\n      feedbackLink: \"https://company.co.in/\",\r\n      orderInstructions: \"Please provide black Umbrella\",\r\n      footerInfo: \"GSTIN-27AAAFH1333H1ZT         \\n         GST Classification -         \\n    Restaurant Services SAC-996331    \\n        FSSAI : 11517007000202        \\n We value your feedback. Share it to: \\n     myfeedback@mcdonaldsindia.com     \\n # The collection of donation is done \\n  on behalf of Ronald McDonald House  \\nCharities Foundation India (RMHC India)\\n  on a principal-to-principal basis.\",\r\n    },\r\n  };\r\n\r\n  const [formData, setFormData] = useState(defaultFormData);\r\n  const [activeTab, setActiveTab] = useState(\"customerInfo\");\r\n  const [popupMessage, setPopupMessage] = useState(null);\r\n  const [popupType, setPopupType] = useState(\"success\"); // or \"error\"\r\n  const [loading, setLoading] = useState(false); // State to track loading\r\n\r\n  // Utility function to format field names\r\n  const formatFieldName = (fieldName) => {\r\n    return fieldName\r\n      .replace(/([A-Z])/g, \" $1\") // Add space before capital letters\r\n      .replace(/^./, (str) => str.toUpperCase()); // Capitalize the first letter\r\n  };\r\n\r\n  const handleChange = (e, section, key, index = null, nestedKey = null) => {\r\n    const value = e.target.type === \"number\" ? Number(e.target.value) : e.target.value;\r\n\r\n    setFormData((prev) => {\r\n      const updatedFormData = { ...prev };\r\n\r\n      if (nestedKey) {\r\n        // Handle nested keys (e.g., \"productsData.taxes\")\r\n        const nestedKeys = nestedKey.split(\".\");\r\n        let target = updatedFormData[section];\r\n\r\n        // Traverse to the correct level\r\n        for (let i = 0; i < nestedKeys.length - 1; i++) {\r\n          target = target[nestedKeys[i]];\r\n        }\r\n\r\n        if (index !== null) {\r\n          // Handle arrays (e.g., productsData)\r\n          target[nestedKeys[nestedKeys.length - 1]][index][key] = value;\r\n        } else {\r\n          // Handle objects (e.g., taxesInfo)\r\n          target[nestedKeys[nestedKeys.length - 1]][key] = value;\r\n        }\r\n      } else if (index !== null) {\r\n        // Handle top-level arrays (e.g., productsData)\r\n        updatedFormData[section][index][key] = value;\r\n      } else {\r\n        // Handle top-level fields\r\n        updatedFormData[section][key] = value;\r\n      }\r\n\r\n      return updatedFormData;\r\n    });\r\n  };\r\n\r\n  const handleAddProduct = () => {\r\n    const newProduct = {\r\n      name: \"\",\r\n      description: \"\",\r\n      productCode: \"\",\r\n      quantity: 0,\r\n      unitAmount: 0,\r\n      totalAmount: 0,\r\n      hsnCode: \"\",\r\n      discount: 0,\r\n      taxes: {\r\n        sgstPercent: 0,\r\n        sgst: 0,\r\n        cgstPercent: 0,\r\n        cgst: 0,\r\n        igstPercent: 0,\r\n        igst: 0,\r\n        utgstPercent: 0,\r\n        utgst: 0,\r\n      },\r\n    };\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      orderDetails: {\r\n        ...prev.orderDetails,\r\n        productsData: [...prev.orderDetails.productsData, newProduct],\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleDeleteProduct = (index) => {\r\n    setFormData((prev) => {\r\n      const updatedArray = [...prev.orderDetails.productsData];\r\n      updatedArray.splice(index, 1); // Remove the product at the given index\r\n      return {\r\n        ...prev,\r\n        orderDetails: {\r\n          ...prev.orderDetails,\r\n          productsData: updatedArray,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true); // Set loading to true when the API call starts\r\n\r\n    // Clone the formData to avoid directly mutating the state\r\n    const payload = JSON.parse(JSON.stringify(formData)); // Deep clone to avoid mutation\r\n\r\n    // Helper function to recursively convert numeric fields to numbers\r\n    const convertToNumbers = (obj) => {\r\n      Object.keys(obj).forEach((key) => {\r\n        if (typeof obj[key] === \"string\" && !isNaN(obj[key])) {\r\n          obj[key] = Number(obj[key]); // Convert numeric strings to numbers\r\n        } else if (typeof obj[key] === \"object\" && obj[key] !== null) {\r\n          convertToNumbers(obj[key]); // Recursively handle nested objects\r\n        }\r\n      });\r\n    };\r\n\r\n    const convertToString = (value) => {\r\n      if (value === null || value === undefined) {\r\n        return \"\"; // Handle null or undefined values\r\n      }\r\n      return String(value); // Convert the value to a string\r\n    };\r\n\r\n    // Convert numeric fields in transactionInfo, orderDetails, and nested objects\r\n    convertToNumbers(payload.transactionInfo);\r\n    convertToNumbers(payload.orderDetails);\r\n    convertToString(payload.invoiceNo);\r\n    convertToString(payload.hsnCode);\r\n    convertToString(payload.orderNo);\r\n    convertToString(payload.orderRegNo);\r\n    convertToString(payload.billingPOSNo);\r\n    convertToString(payload.cashierId)\r\n    convertToString(payload.storeCode)\r\n    Object.keys(payload.transactionInfo).forEach((key) => {\r\n      payload.transactionInfo[key] = convertToString(payload.transactionInfo[key]);\r\n    });\r\n\r\n\r\n    const apiUrl =\r\n      \"https://testapi.pinelabs.com/v1/billing-integration/qr-payments/transactions/digital-invoice-v2/create\";\r\n\r\n    // Construct the headers\r\n    const headers = {\r\n      Authorization: \"Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJTYlBZU2ZJOS04bklWczl3Xy1Fa3RVdWNVaURNdUZiMGM5bkpVM3hhYzdBIn0.eyJleHAiOjE3NjEwMjQzMjksImlhdCI6MTc0NTQ3MjMyOSwianRpIjoiMjFkOTJlYjYtZDdiNi00ZmM3LTk0NDktMWI2Mjk5MTExMzJhIiwiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eXRlc3QucGluZWxhYnMuY29tL3JlYWxtcy9waW5lbGFicyIsInN1YiI6IjhmNzJlZjBiLTI0ZTMtNDQwZi1iZmQzLTExMTVhMDhkZjBiZCIsInR5cCI6IkJlYXJlciIsImF6cCI6Ik1lcmNoYW50QmlsbGluZ1NlcnZfMjAxNSIsImFjciI6IjEiLCJzY29wZSI6ImZldGNoLnBpbmUub25lLnRyYW5zYWN0aW9uLkdFVCBiaWxsaW5nLWludGVncmF0aW9uLnFyLXBheW1lbnRzLnRyYW5zYWN0aW9ucy5QT1NUIHYxLmJpbGxpbmctaW50ZWdyYXRpb24ucXItcGF5bWVudHMudHJhbnNhY3Rpb25zLmRpZ2l0YWwtaW52b2ljZS12Mi5jcmVhdGUuUE9TVCBiaWxsaW5nLWludGVncmF0aW9uLnFyLXBheW1lbnRzLnRyYW5zYWN0aW9ucy5HRVQgYmlsbGluZy1pbnRlZ3JhdGlvbi5xci1wYXltZW50cy50cmFuc2FjdGlvbnMuY2FuY2VsLlBPU1Qgb2ZmbGluZV9hY2Nlc3MgdjEuYmlsbGluZy1pbnRlZ3JhdGlvbi5xci1wYXltZW50cy50cmFuc2FjdGlvbnMuZGlnaXRhbC1pbnZvaWNlLXYxLmNyZWF0ZS5QT1NUIiwiY2xpZW50SG9zdCI6IjE0LjE0My4xMjAuODIiLCJleHRJZCI6IjIwMTUiLCJNZXJjaGFudElkIjoiMjAxNSIsImNsaWVudEFkZHJlc3MiOiIxNC4xNDMuMTIwLjgyIiwiY2xpZW50X2lkIjoiTWVyY2hhbnRCaWxsaW5nU2Vydl8yMDE1In0.DtG1R--rgd9HZccykXXeD7N13YCOStPTKsVMIDsDSn2VMHdBu7_Erwktt2YCm_k3tV5LMH4pwQYN6NAWGnDNlQ\",\r\n      \"Content-Type\": \"application/json\",\r\n      \"correlation-id\": \"123455\",\r\n    };\r\n\r\n    // Log the final curl command\r\n    const curlCommand = `\r\ncurl --location '${apiUrl}' \\\\\r\n--header 'Authorization: ${headers.Authorization}' \\\\\r\n--header 'Content-Type: ${headers[\"Content-Type\"]}' \\\\\r\n--header 'correlation-id: ${headers[\"correlation-id\"]}' \\\\\r\n--data-raw '${JSON.stringify(payload, null, 2)}'\r\n    `;\r\n    console.log(\"Final CURL Command:\\n\", curlCommand);\r\n\r\n    try {\r\n      const response = await axios.post(apiUrl, payload, { headers });\r\n      setPopupType(\"success\");\r\n      setPopupMessage(\"Invoice uploaded successfully!\");\r\n      console.log(\"Response:\", response.data);\r\n    } catch (error) {\r\n      setPopupType(\"error\");\r\n      setPopupMessage(error.response?.data?.message || \"API call failed!\");\r\n      console.error(\"Error:\", error.response?.data || error.message);\r\n    } finally {\r\n      setLoading(false); // Set loading to false when the API call completes\r\n    }\r\n  };\r\n\r\n  const renderFields = (section) => {\r\n    if (section === \"productsData\") {\r\n      return (\r\n        <>\r\n          {formData.orderDetails.productsData &&\r\n            formData.orderDetails.productsData.map((product, index) => (\r\n              <div key={index} className=\"product-block\">\r\n                <h3>Product {index + 1}</h3>\r\n                <div className=\"product-fields\">\r\n                  {Object.keys(product).map((key) => {\r\n                    if (key === \"taxes\") {\r\n                      // Render Taxes block\r\n                      return (\r\n                        <div key={key} className=\"form-field\">\r\n                          <h5>Taxes</h5>\r\n                          <div className=\"tax-info-block\">\r\n                            {product.taxes &&\r\n                              Object.keys(product.taxes).map((taxKey) => (\r\n                                <div key={taxKey} className=\"form-field\">\r\n                                  <label className=\"field-label\">{formatFieldName(taxKey)}</label>\r\n                                  <input\r\n                                    type=\"number\"\r\n                                    value={product.taxes[taxKey] || 0} // Default to 0 if undefined\r\n                                    onChange={(e) =>\r\n                                      handleChange(e, \"orderDetails\", taxKey, index, \"productsData.taxes\")\r\n                                    }\r\n                                    className=\"field-input\"\r\n                                  />\r\n                                </div>\r\n                              ))}\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    }\r\n                    return (\r\n                      <div key={key} className=\"form-field\">\r\n                        <label className=\"field-label\">{formatFieldName(key)}</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={product[key] || \"\"} // Default to empty string if undefined\r\n                          onChange={(e) => handleChange(e, \"orderDetails\", key, index, \"productsData\")}\r\n                          className=\"field-input\"\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"delete-product-button\"\r\n                  onClick={() => handleDeleteProduct(index)}\r\n                >\r\n                  Delete\r\n                </button>\r\n                <hr className=\"product-separator\" />\r\n              </div>\r\n            ))}\r\n          <button\r\n            type=\"button\"\r\n            className=\"add-product-button\"\r\n            onClick={handleAddProduct}\r\n          >\r\n            Add Product\r\n          </button>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (section === \"orderDetails\") {\r\n      return (\r\n        <>\r\n          <div className=\"form-field\">\r\n            <h5>Order Details</h5>\r\n            <div className=\"order-details-block\">\r\n              {/* Render all fields in Order Details */}\r\n              {Object.keys(formData[section]).map((key) => {\r\n                if (\r\n                  key === \"productsData\" ||\r\n                  key === \"payments\" ||\r\n                  key === \"taxesInfo\" ||\r\n                  key === \"loyaltyData\"\r\n                ) {\r\n                  // Skip rendering these keys for now; we'll handle them later\r\n                  return null;\r\n                }\r\n                if (key === \"orderDateTime\") {\r\n                  // Render Order Date Time with a date-time picker including seconds\r\n                  return (\r\n                    <div key={key} className=\"form-field\">\r\n                      <label className=\"field-label\">{formatFieldName(key)}</label>\r\n                      <input\r\n                        type=\"datetime-local\"\r\n                        step=\"1\" // Allows selection of seconds\r\n                        value={formData[section][key]}\r\n                        onChange={(e) => handleChange(e, section, key)}\r\n                        className=\"field-input\"\r\n                      />\r\n                    </div>\r\n                  );\r\n                }\r\n                return (\r\n                  <div key={key} className=\"form-field\">\r\n                    <label className=\"field-label\">{formatFieldName(key)}</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={formData[section][key]}\r\n                      onChange={(e) => handleChange(e, section, key)}\r\n                      className=\"field-input\"\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Render Payments Section */}\r\n          {formData.orderDetails.payments && (\r\n            <div className=\"form-field\">\r\n              <h5>Payments</h5>\r\n              {formData.orderDetails.payments.map((payment, index) => (\r\n                <div key={index} className=\"payment-block\">\r\n                  <div className=\"form-field\">\r\n                    <label className=\"field-label\">Mode</label>\r\n                    <select\r\n                      value={payment.mode}\r\n                      onChange={(e) =>\r\n                        handleChange(e, \"orderDetails\", \"mode\", index, \"payments\")\r\n                      }\r\n                      className=\"field-input\"\r\n                    >\r\n                      <option value=\"UPI\">UPI</option>\r\n                      <option value=\"CARD\">CARD</option>\r\n                      <option value=\"CASH\">CASH</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"form-field\">\r\n                    <label className=\"field-label\">Total</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={payment.total}\r\n                      onChange={(e) =>\r\n                        handleChange(e, \"orderDetails\", \"total\", index, \"payments\")\r\n                      }\r\n                      className=\"field-input\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-field\">\r\n                    <label className=\"field-label\">Status</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={payment.status}\r\n                      onChange={(e) =>\r\n                        handleChange(e, \"orderDetails\", \"status\", index, \"payments\")\r\n                      }\r\n                      className=\"field-input\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          {/* Render Taxes Info Section */}\r\n          {formData.orderDetails.taxesInfo && (\r\n            <div className=\"form-field\">\r\n              <h5>Taxes Info</h5>\r\n              <div className=\"tax-info-block\">\r\n                {Object.keys(formData.orderDetails.taxesInfo).map((taxKey) => (\r\n                  <div key={taxKey} className=\"form-field\">\r\n                    <label className=\"field-label\">{formatFieldName(taxKey)}</label>\r\n                    <input\r\n                      type=\"number\" // Ensure numeric input\r\n                      value={formData.orderDetails.taxesInfo[taxKey] || \"\"} // Ensure value is a number\r\n                      onChange={(e) =>\r\n                        handleChange(e, \"orderDetails\", taxKey, null, \"taxesInfo\")\r\n                      }\r\n                      className=\"field-input\"\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Render Loyalty Data Section */}\r\n          {formData.orderDetails.loyaltyData && (\r\n            <div className=\"form-field\">\r\n              <h5>Loyalty Data</h5>\r\n              <div className=\"loyalty-data-block\">\r\n                {Object.keys(formData.orderDetails.loyaltyData).map((loyaltyKey) => (\r\n                  <div key={loyaltyKey} className=\"form-field\">\r\n                    <label className=\"field-label\">{formatFieldName(loyaltyKey)}</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={formData.orderDetails.loyaltyData[loyaltyKey]}\r\n                      onChange={(e) =>\r\n                        handleChange(e, \"orderDetails\", loyaltyKey, null, \"loyaltyData\")\r\n                      }\r\n                      className=\"field-input\"\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n\r\n    return Object.keys(formData[section]).map((key) => (\r\n      <div key={key} className=\"form-field\">\r\n        <label className=\"field-label\">{formatFieldName(key)}</label>\r\n        <input\r\n          type=\"text\"\r\n          value={formData[section][key]}\r\n          onChange={(e) => handleChange(e, section, key)}\r\n          className=\"field-input\"\r\n        />\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h1 className=\"form-title\">Digital Invoice Form</h1>\r\n      <div className={`tabs ${popupMessage ? \"popup-active\" : \"\"}`}>\r\n        <button\r\n          className={`tab-button ${activeTab === \"customerInfo\" ? \"active\" : \"\"}`}\r\n          onClick={() => setActiveTab(\"customerInfo\")}\r\n        >\r\n          Customer Info\r\n        </button>\r\n        <button\r\n          className={`tab-button ${activeTab === \"transactionInfo\" ? \"active\" : \"\"}`}\r\n          onClick={() => setActiveTab(\"transactionInfo\")}\r\n        >\r\n          Transaction Info\r\n        </button>\r\n        <button\r\n          className={`tab-button ${activeTab === \"orderDetails\" ? \"active\" : \"\"}`}\r\n          onClick={() => setActiveTab(\"orderDetails\")}\r\n        >\r\n          Order Details\r\n        </button>\r\n        <button\r\n          className={`tab-button ${activeTab === \"productsData\" ? \"active\" : \"\"}`}\r\n          onClick={() => setActiveTab(\"productsData\")}\r\n        >\r\n          Product Data\r\n        </button>\r\n        <button\r\n          className={`tab-button ${activeTab === \"billFooterData\" ? \"active\" : \"\"}`}\r\n          onClick={() => setActiveTab(\"billFooterData\")}\r\n        >\r\n          Bill Footer Data\r\n        </button>\r\n      </div>\r\n      <form onSubmit={handleSubmit} className={`form ${popupMessage ? \"popup-active\" : \"\"}`}>\r\n        {activeTab === \"customerInfo\" && (\r\n          <div className=\"form-section\">{renderFields(\"customerInfo\")}</div>\r\n        )}\r\n        {activeTab === \"transactionInfo\" && (\r\n          <div className=\"form-section\">{renderFields(\"transactionInfo\")}</div>\r\n        )}\r\n        {activeTab === \"orderDetails\" && (\r\n          <div className=\"form-section\">{renderFields(\"orderDetails\")}</div>\r\n        )}\r\n        {activeTab === \"productsData\" && (\r\n          <div className=\"form-section\">{renderFields(\"productsData\")}</div>\r\n        )}\r\n        {activeTab === \"billFooterData\" && (\r\n          <div className=\"form-section\">{renderFields(\"billFooterData\")}</div>\r\n        )}\r\n        <button type=\"submit\" className=\"submit-button\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n      {loading && (\r\n  <div className=\"loading-toast\">\r\n    <div className=\"spinner\"></div>\r\n  </div>\r\n)}\r\n      {popupMessage && (\r\n        <div className={`popup ${popupType}`}>\r\n          <h3>{popupType === \"success\" ? \"Success\" : \"Error\"}</h3>\r\n          <p>{popupMessage}</p>\r\n          <button onClick={() => setPopupMessage(null)}>Close</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DigitalInvoiceForm;","import React from \"react\";\nimport DigitalInvoiceForm from \"./components/DigitalInvoiceForm\";\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"logo\">\n        <div className=\"logo-text\">PINE LABS</div>\n      </div>\n      <DigitalInvoiceForm />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/App.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}