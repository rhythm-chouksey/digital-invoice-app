{"version":3,"sources":["components/DigitalInvoiceForm.jsx","App.jsx","index.jsx"],"names":["DigitalInvoiceForm","defaultFormData","customerInfo","mobile","name","email","countryCode","gstrName","gstrMob","gstrNo","transactionInfo","clientId","batchId","roc","txnId","txnType","orderDetails","storeCode","storeAddress","billingPOSNo","netPayableAmount","subTotal","rounding","taxesInfo","cgstPercent","sgstPercent","igstPercent","utgstPercent","cgst","sgst","igst","utgst","payments","mode","total","status","orderNo","orderRegNo","productsData","description","productCode","quantity","unitAmount","totalAmount","hsnCode","discount","taxes","purchasedPieces","invoiceNo","barCode","loyaltyData","type","cardNum","pointsEarned","walletAmount","amountSaved","pointsRedeemed","cashierId","cashierName","orderDateTime","getCurrentDateTime","now","Date","pad","n","toString","padStart","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","billFooterData","disclaimer","purchaseTerms","feedbackCode","feedbackDiscount","feedbackLink","orderInstructions","footerInfo","formData","setFormData","useState","activeTab","setActiveTab","popupMessage","setPopupMessage","popupType","setPopupType","loading","setLoading","deleteProductIndex","setDeleteProductIndex","formatFieldName","fieldName","customLabels","replace","str","toUpperCase","handleChange","e","section","key","index","arguments","length","undefined","nestedKey","value","target","Number","prev","products","product","handleAddProduct","newProduct","renderFields","_jsxs","_Fragment","children","map","className","_jsx","Object","keys","taxKey","onChange","onClick","handleDeleteProduct","formatDateTimeForInput","date","time","split","day","month","year","formatDateTimeForState","step","payment","loyaltyKey","onSubmit","async","preventDefault","payload","JSON","parse","stringify","convertToNumbers","obj","forEach","isNaN","convertToString","String","apiUrl","headers","Authorization","curlCommand","console","log","response","axios","post","data","error","_error$response","_error$response$data","_error$response2","message","style","display","gap","justifyContent","confirmDeleteProduct","updatedArray","splice","cancelDeleteProduct","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98f5d847.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./DigitalInvoiceForm.css\";\r\n\r\nfunction DigitalInvoiceForm() {\r\n  // Helper to get current date-time in \"DD-MM-YYYY HH:mm:ss\" format\r\n  const getCurrentDateTime = () => {\r\n    const now = new Date();\r\n    const pad = (n) => n.toString().padStart(2, \"0\");\r\n    const day = pad(now.getDate());\r\n    const month = pad(now.getMonth() + 1);\r\n    const year = now.getFullYear();\r\n    const hours = pad(now.getHours());\r\n    const minutes = pad(now.getMinutes());\r\n    const seconds = pad(now.getSeconds());\r\n    return `${day}-${month}-${year} ${hours}:${minutes}:${seconds}`;\r\n  };\r\n\r\n  const defaultFormData = {\r\n    customerInfo: {\r\n      mobile: \"\",\r\n      name: \"Rhythm\",\r\n      email: \"rhythm.chouksey@example.com\",\r\n      countryCode: \"+91\",\r\n      gstrName: \"Ramandeep\",\r\n      gstrMob: \"9764775793\",\r\n      gstrNo: \"217686439898\",\r\n    },\r\n    transactionInfo: {\r\n      clientId: \"0\",\r\n      batchId: \"0\",\r\n      roc: \"0\",\r\n      txnId: \"0\",\r\n      txnType: \"UPI\",\r\n    },\r\n    orderDetails: {\r\n      storeCode: \"9991\",\r\n      storeAddress: \"Connaught Plaza Restaurants Pvt.Ltd.\",\r\n      billingPOSNo: \"101\",\r\n      netPayableAmount: 13196,\r\n      subTotal: 11782.12,\r\n      rounding: 0,\r\n      taxesInfo: {\r\n        cgstPercent: 9,\r\n        sgstPercent: 9,\r\n        igstPercent: 9,\r\n        utgstPercent: 9,\r\n        cgst: 148.5,\r\n        sgst: 148.5,\r\n        igst: 148.5,\r\n        utgst: 148.5,\r\n      },\r\n      payments: [\r\n        {\r\n          mode: \"UPI\",\r\n          total: 13196,\r\n          status: \"SUCCESS\",\r\n        },\r\n      ],\r\n      orderNo: \"28\",\r\n      orderRegNo: \"1\",\r\n      productsData: [\r\n        {\r\n          name: \"BLACK LOGO PRINT CREW NECK T-SHIRT\",\r\n          description: \"Premium t-shirt\",\r\n          productCode: \"A123\",\r\n          quantity: 1,\r\n          unitAmount: 300,\r\n          totalAmount: 250,\r\n          hsnCode: \"6276462\",\r\n          discount: 50,\r\n          taxes: {\r\n            sgstPercent: 6,\r\n            sgst: 8,\r\n            cgstPercent: 6,\r\n            cgst: 8,\r\n            igstPercent: 6,\r\n            igst: 8,\r\n            utgstPercent: 6,\r\n            utgst: 3,\r\n          },\r\n        },\r\n        {\r\n          name: \"BLACK LOGO RISE WASHED GLENN SLIM FIT JEANS\",\r\n          description: \"BLACK LOGO RISE WASHED GLENN SLIM FIT JEANS\",\r\n          productCode: \"A124\",\r\n          quantity: 2,\r\n          unitAmount: 700,\r\n          totalAmount: 1400,\r\n          hsnCode: \"6276462\",\r\n          discount: 0,\r\n          taxes: {\r\n            sgstPercent: 6,\r\n            sgst: 8,\r\n            cgstPercent: 6,\r\n            cgst: 8,\r\n            igstPercent: 6,\r\n            igst: 8,\r\n            utgstPercent: 6,\r\n            utgst: 3,\r\n          },\r\n        },\r\n      ],\r\n      purchasedPieces: 3,\r\n      invoiceNo: \"5286\",\r\n      barCode: \"\",\r\n      loyaltyData: {\r\n        type: \"\",\r\n        cardNum: \"\",\r\n        pointsEarned: 0,\r\n        walletAmount: 0,\r\n        amountSaved: 0,\r\n        pointsRedeemed: 0,\r\n      },\r\n      cashierId: \"475117\",\r\n      cashierName: \"Krishna\",\r\n      orderDateTime: getCurrentDateTime(), // Set default to current date-time\r\n    },\r\n    billFooterData: {\r\n      disclaimer: \"disclaimer testing\",\r\n      purchaseTerms: \"https://company.co.in/\",\r\n      feedbackCode: \"LTE123\",\r\n      feedbackDiscount: 0,\r\n      feedbackLink: \"https://company.co.in/\",\r\n      orderInstructions: \"Please provide black Umbrella\",\r\n      footerInfo:\r\n        \"GSTIN-27AAAFH1333H1ZT         \\n         GST Classification -         \\n    Restaurant Services SAC-996331    \\n        FSSAI : 11517007000202        \\n We value your feedback. Share it to: \\n     myfeedback@mcdonaldsindia.com     \\n # The collection of donation is done \\n  on behalf of Ronald McDonald House  \\nCharities Foundation India (RMHC India)\\n  on a principal-to-principal basis.\",\r\n    },\r\n  };\r\n\r\n  const [formData, setFormData] = useState(defaultFormData);\r\n  const [activeTab, setActiveTab] = useState(\"customerInfo\");\r\n  const [popupMessage, setPopupMessage] = useState(null);\r\n  const [popupType, setPopupType] = useState(\"success\"); // or \"error\"\r\n  const [loading, setLoading] = useState(false); // State to track loading\r\n\r\n  // Add state for delete confirmation\r\n  const [deleteProductIndex, setDeleteProductIndex] = useState(null);\r\n\r\n  // Utility function to format field names\r\n  const formatFieldName = (fieldName) => {\r\n    // Custom label mapping\r\n    const customLabels = {\r\n      barCode: \"Barcode Number\",\r\n      gstrNo: \"Gst Reg No\",\r\n      gstrMob: \"Gst Reg Mob\",\r\n      gstrName: \"Gst Reg Name\",\r\n      billingPOSNo: \"Billing POS No\",\r\n      cashierId: \"Cashier ID\"\r\n    };\r\n    if (customLabels[fieldName]) return customLabels[fieldName];\r\n\r\n    return fieldName\r\n      .replace(/([A-Z])/g, \" $1\") // Add space before capital letters\r\n      .replace(/^./, (str) => str.toUpperCase()); // Capitalize the first letter\r\n  };\r\n\r\n  const handleChange = (e, section, key, index = null, nestedKey = null) => {\r\n    const value = e.target.type === \"number\" ? Number(e.target.value) : e.target.value;\r\n\r\n    setFormData((prev) => {\r\n      // Handle taxes inside productsData\r\n      if (nestedKey === \"productsData.taxes\" && index !== null) {\r\n        const products = [...prev.orderDetails.productsData];\r\n        const product = { ...products[index] };\r\n        product.taxes = { ...product.taxes, [key]: value };\r\n        products[index] = product;\r\n        return {\r\n          ...prev,\r\n          orderDetails: {\r\n            ...prev.orderDetails,\r\n            productsData: products,\r\n          },\r\n        };\r\n      }\r\n\r\n      // Handle taxesInfo (order-level)\r\n      if (nestedKey === \"taxesInfo\") {\r\n        return {\r\n          ...prev,\r\n          orderDetails: {\r\n            ...prev.orderDetails,\r\n            taxesInfo: {\r\n              ...prev.orderDetails.taxesInfo,\r\n              [key]: value,\r\n            },\r\n          },\r\n        };\r\n      }\r\n\r\n      if (nestedKey === \"loyaltyData\") {\r\n        return {\r\n          ...prev,\r\n          orderDetails: {\r\n            ...prev.orderDetails,\r\n            loyaltyData: {\r\n              ...prev.orderDetails.loyaltyData,\r\n              [key]: value,\r\n            },\r\n          },\r\n        };\r\n      }\r\n\r\n      // Handle other product fields\r\n      if (nestedKey === \"productsData\" && index !== null) {\r\n        const products = [...prev.orderDetails.productsData];\r\n        products[index] = { ...products[index], [key]: value };\r\n        return {\r\n          ...prev,\r\n          orderDetails: {\r\n            ...prev.orderDetails,\r\n            productsData: products,\r\n          },\r\n        };\r\n      }\r\n\r\n      // Default handler for top-level fields\r\n      if (index !== null && nestedKey === \"payments\" && section === \"orderDetails\") {\r\n        const payments = [...prev.orderDetails.payments];\r\n        payments[index] = { ...payments[index], [key]: value };\r\n        return {\r\n          ...prev,\r\n          orderDetails: {\r\n            ...prev.orderDetails,\r\n            payments,\r\n          },\r\n        };\r\n      }\r\n\r\n      if (index !== null && section === \"productsData\") {\r\n        const products = [...prev.orderDetails.productsData];\r\n        products[index] = { ...products[index], [key]: value };\r\n        return {\r\n          ...prev,\r\n          orderDetails: {\r\n            ...prev.orderDetails,\r\n            productsData: products,\r\n          },\r\n        };\r\n      }\r\n\r\n      // Top-level fields\r\n      if (section in prev) {\r\n        return {\r\n          ...prev,\r\n          [section]: {\r\n            ...prev[section],\r\n            [key]: value,\r\n          },\r\n        };\r\n      }\r\n\r\n      return prev;\r\n    });\r\n  };\r\n\r\n  const handleAddProduct = () => {\r\n    const newProduct = {\r\n      name: \"\",\r\n      description: \"\",\r\n      productCode: \"\",\r\n      quantity: 0,\r\n      unitAmount: 0,\r\n      totalAmount: 0,\r\n      hsnCode: \"\",\r\n      discount: 0,\r\n      taxes: {\r\n        sgstPercent: 0,\r\n        sgst: 0,\r\n        cgstPercent: 0,\r\n        cgst: 0,\r\n        igstPercent: 0,\r\n        igst: 0,\r\n        utgstPercent: 0,\r\n        utgst: 0,\r\n      },\r\n    };\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      orderDetails: {\r\n        ...prev.orderDetails,\r\n        productsData: [...prev.orderDetails.productsData, newProduct],\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleDeleteProduct = (index) => {\r\n    setDeleteProductIndex(index); // Show confirmation prompt\r\n  };\r\n\r\n  const confirmDeleteProduct = () => {\r\n    setFormData((prev) => {\r\n      const updatedArray = [...prev.orderDetails.productsData];\r\n      updatedArray.splice(deleteProductIndex, 1);\r\n      return {\r\n        ...prev,\r\n        orderDetails: {\r\n          ...prev.orderDetails,\r\n          productsData: updatedArray,\r\n        },\r\n      };\r\n    });\r\n    setDeleteProductIndex(null); // Hide prompt after deletion\r\n  };\r\n\r\n  const cancelDeleteProduct = () => {\r\n    setDeleteProductIndex(null); // Hide prompt without deleting\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true); // Set loading to true when the API call starts\r\n\r\n    // Clone the formData to avoid directly mutating the state\r\n    const payload = JSON.parse(JSON.stringify(formData)); // Deep clone to avoid mutation\r\n\r\n    // Helper function to recursively convert numeric fields to numbers\r\n    const convertToNumbers = (obj) => {\r\n      Object.keys(obj).forEach((key) => {\r\n        if (typeof obj[key] === \"string\" && !isNaN(obj[key])) {\r\n          obj[key] = Number(obj[key]); // Convert numeric strings to numbers\r\n        } else if (typeof obj[key] === \"object\" && obj[key] !== null) {\r\n          convertToNumbers(obj[key]); // Recursively handle nested objects\r\n        }\r\n      });\r\n    };\r\n\r\n    const convertToString = (value) => {\r\n      if (value === null || value === undefined) {\r\n        return \"\"; // Handle null or undefined values\r\n      }\r\n      return String(value); // Convert the value to a string\r\n    };\r\n\r\n    // Convert numeric fields in transactionInfo, orderDetails, and nested objects\r\n    convertToNumbers(payload.transactionInfo);\r\n    convertToNumbers(payload.orderDetails);\r\n    convertToString(payload.invoiceNo);\r\n    convertToString(payload.hsnCode);\r\n    convertToString(payload.orderNo);\r\n    convertToString(payload.orderRegNo);\r\n    convertToString(payload.billingPOSNo);\r\n    convertToString(payload.cashierId)\r\n    convertToString(payload.storeCode)\r\n    Object.keys(payload.transactionInfo).forEach((key) => {\r\n      payload.transactionInfo[key] = convertToString(payload.transactionInfo[key]);\r\n    });\r\n\r\n\r\n    const apiUrl =\r\n      \"https://testapi.pinelabs.com/v1/billing-integration/qr-payments/transactions/digital-invoice-v2/create\";\r\n\r\n    // Construct the headers\r\n    const headers = {\r\n      Authorization: \"Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJTYlBZU2ZJOS04bklWczl3Xy1Fa3RVdWNVaURNdUZiMGM5bkpVM3hhYzdBIn0.eyJleHAiOjE3NjE1NjMyMTksImlhdCI6MTc0NjAxMTIxOSwianRpIjoiMDdhZjZkMDYtZTM1ZC00ZjEwLWE2OTQtM2ZmMDFiNTMyMDYzIiwiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eXRlc3QucGluZWxhYnMuY29tL3JlYWxtcy9waW5lbGFicyIsInN1YiI6IjhmNzJlZjBiLTI0ZTMtNDQwZi1iZmQzLTExMTVhMDhkZjBiZCIsInR5cCI6IkJlYXJlciIsImF6cCI6Ik1lcmNoYW50QmlsbGluZ1NlcnZfMjAxNSIsImFjciI6IjEiLCJzY29wZSI6ImZldGNoLnBpbmUub25lLnRyYW5zYWN0aW9uLkdFVCBiaWxsaW5nLWludGVncmF0aW9uLnFyLXBheW1lbnRzLnRyYW5zYWN0aW9ucy5QT1NUIHYxLmJpbGxpbmctaW50ZWdyYXRpb24ucXItcGF5bWVudHMudHJhbnNhY3Rpb25zLmRpZ2l0YWwtaW52b2ljZS12Mi5jcmVhdGUuUE9TVCBiaWxsaW5nLWludGVncmF0aW9uLnFyLXBheW1lbnRzLnRyYW5zYWN0aW9ucy5HRVQgYmlsbGluZy1pbnRlZ3JhdGlvbi5xci1wYXltZW50cy50cmFuc2FjdGlvbnMuY2FuY2VsLlBPU1Qgb2ZmbGluZV9hY2Nlc3MgdjEuYmlsbGluZy1pbnRlZ3JhdGlvbi5xci1wYXltZW50cy50cmFuc2FjdGlvbnMuZGlnaXRhbC1pbnZvaWNlLXYxLmNyZWF0ZS5QT1NUIiwiY2xpZW50SG9zdCI6IjExNS4xMTAuMTQxLjI0MiIsImV4dElkIjoiMjAxNSIsIk1lcmNoYW50SWQiOiIyMDE1IiwiY2xpZW50QWRkcmVzcyI6IjExNS4xMTAuMTQxLjI0MiIsImNsaWVudF9pZCI6Ik1lcmNoYW50QmlsbGluZ1NlcnZfMjAxNSJ9.h8fXECFyq81ADlaXotGBCEi9faW8Qo8eFzw4TXYiRIpdkef-cHTqOlcce7nqADJOTOu-2oU5c_RVIIGTNeiLYw\",\r\n      \"Content-Type\": \"application/json\",\r\n      \"correlation-id\": \"123455\",\r\n    };\r\n\r\n    // Log the final curl command\r\n    const curlCommand = `\r\ncurl --location '${apiUrl}' \\\\\r\n--header 'Authorization: ${headers.Authorization}' \\\\\r\n--header 'Content-Type: ${headers[\"Content-Type\"]}' \\\\\r\n--header 'correlation-id: ${headers[\"correlation-id\"]}' \\\\\r\n--data-raw '${JSON.stringify(payload, null, 2)}'\r\n    `;\r\n    console.log(\"Final CURL Command:\\n\", curlCommand);\r\n\r\n    try {\r\n      const response = await axios.post(apiUrl, payload, { headers });\r\n      setPopupType(\"success\");\r\n      setPopupMessage(\"Invoice uploaded successfully!\");\r\n      console.log(\"Response:\", response.data);\r\n    } catch (error) {\r\n      setPopupType(\"error\");\r\n      setPopupMessage(error.response?.data?.message || \"API call failed!\");\r\n      console.error(\"Error:\", error.response?.data || error.message);\r\n    } finally {\r\n      setLoading(false); // Set loading to false when the API call completes\r\n    }\r\n  };\r\n\r\n  const renderFields = (section) => {\r\n    if (section === \"productsData\") {\r\n      return (\r\n        <>\r\n          {formData.orderDetails.productsData &&\r\n            formData.orderDetails.productsData.map((product, index) => (\r\n              <div key={index} className=\"product-block\">\r\n                <div className=\"product-fields\">\r\n                  {Object.keys(product).map((key) => {\r\n                    if (key === \"taxes\") {\r\n                      // Render Taxes block\r\n                      return (\r\n                        <div key={key} className=\"form-field\">\r\n                          <h5>Taxes</h5>\r\n                          <div className=\"tax-info-block\">\r\n                            {product.taxes &&\r\n                              Object.keys(product.taxes).map((taxKey) => (\r\n                                <div key={taxKey} className=\"form-field\">\r\n                                  <label className=\"field-label\">{formatFieldName(taxKey)}</label>\r\n                                  <input\r\n                                    type=\"number\"\r\n                                    value={product.taxes[taxKey] || 0} // Default to 0 if undefined\r\n                                    onChange={(e) =>\r\n                                      handleChange(e, \"orderDetails\", taxKey, index, \"productsData.taxes\")\r\n                                    }\r\n                                    className=\"field-input\"\r\n                                  />\r\n                                </div>\r\n                              ))}\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    }\r\n                    return (\r\n                      <div key={key} className=\"form-field\">\r\n                        <label className=\"field-label\">{formatFieldName(key)}</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={product[key] || \"\"} // Default to empty string if undefined\r\n                          onChange={(e) => handleChange(e, \"orderDetails\", key, index, \"productsData\")}\r\n                          className=\"field-input\"\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"delete-product-button\"\r\n                  onClick={() => handleDeleteProduct(index)}\r\n                >\r\n                  Delete\r\n                </button>\r\n                <hr className=\"product-separator\" />\r\n              </div>\r\n            ))}\r\n          <button\r\n            type=\"button\"\r\n            className=\"add-product-button\"\r\n            onClick={handleAddProduct}\r\n          >\r\n            Add Product\r\n          </button>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (section === \"orderDetails\") {\r\n      return (\r\n        <>\r\n          <div className=\"form-field\">\r\n            <h5>Order Details</h5>\r\n            <div className=\"order-details-block\">\r\n              {/* Render all fields in Order Details */}\r\n              {Object.keys(formData[section]).map((key) => {\r\n                if (\r\n                  key === \"productsData\" ||\r\n                  key === \"payments\" ||\r\n                  key === \"taxesInfo\" ||\r\n                  key === \"loyaltyData\"\r\n                ) {\r\n                  // Skip rendering these keys for now; we'll handle them later\r\n                  return null;\r\n                }\r\n                if (key === \"orderDateTime\") {\r\n                  // Render Order Date Time with a date-time picker including seconds\r\n                  // Custom handler to keep format as \"DD-MM-YYYY HH:mm:ss\"\r\n                  const formatDateTimeForInput = (value) => {\r\n                    // Convert \"13-09-2024 17:20:51\" to \"2024-09-13T17:20:51\"\r\n                    if (!value) return \"\";\r\n                    const [date, time] = value.split(\" \");\r\n                    if (!date || !time) return \"\";\r\n                    const [day, month, year] = date.split(\"-\");\r\n                    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}T${time}`;\r\n                  };\r\n\r\n                  const formatDateTimeForState = (value) => {\r\n                    // Convert \"2024-09-13T17:20:51\" to \"13-09-2024 17:20:51\"\r\n                    if (!value) return \"\";\r\n                    const [date, time] = value.split(\"T\");\r\n                    if (!date || !time) return \"\";\r\n                    const [year, month, day] = date.split(\"-\");\r\n                    return `${day}-${month}-${year} ${time}`;\r\n                  };\r\n\r\n                  return (\r\n                    <div key={key} className=\"form-field\">\r\n                      <label className=\"field-label\">{formatFieldName(key)}</label>\r\n                      <input\r\n                        type=\"datetime-local\"\r\n                        step=\"1\"\r\n                        value={formatDateTimeForInput(formData[section][key])}\r\n                        onChange={(e) =>\r\n                          handleChange(\r\n                            { target: { value: formatDateTimeForState(e.target.value) } },\r\n                            section,\r\n                            key\r\n                          )\r\n                        }\r\n                        className=\"field-input\"\r\n                      />\r\n                    </div>\r\n                  );\r\n                }\r\n                return (\r\n                  <div key={key} className=\"form-field\">\r\n                    <label className=\"field-label\">{formatFieldName(key)}</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={formData[section][key]}\r\n                      onChange={(e) => handleChange(e, section, key)}\r\n                      className=\"field-input\"\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Render Payments Section */}\r\n          {formData.orderDetails.payments && (\r\n            <div className=\"form-field\">\r\n              <h5>Payments</h5>\r\n              {formData.orderDetails.payments.map((payment, index) => (\r\n                <div key={index} className=\"payment-block\">\r\n                  <div className=\"form-field\">\r\n                    <label className=\"field-label\">Mode</label>\r\n                    <select\r\n                      value={payment.mode}\r\n                      onChange={(e) =>\r\n                        handleChange(e, \"orderDetails\", \"mode\", index, \"payments\")\r\n                      }\r\n                      className=\"field-input\"\r\n                    >\r\n                      <option value=\"UPI\">UPI</option>\r\n                      <option value=\"CARD\">CARD</option>\r\n                      <option value=\"CASH\">CASH</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"form-field\">\r\n                    <label className=\"field-label\">Total</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={payment.total}\r\n                      onChange={(e) =>\r\n                        handleChange(e, \"orderDetails\", \"total\", index, \"payments\")\r\n                      }\r\n                      className=\"field-input\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-field\">\r\n                    <label className=\"field-label\">Status</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={payment.status}\r\n                      onChange={(e) =>\r\n                        handleChange(e, \"orderDetails\", \"status\", index, \"payments\")\r\n                      }\r\n                      className=\"field-input\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          {/* Render Taxes Info Section */}\r\n          {formData.orderDetails.taxesInfo && (\r\n            <div className=\"form-field\">\r\n              <h5>Taxes Info</h5>\r\n              <div className=\"tax-info-block\">\r\n                {Object.keys(formData.orderDetails.taxesInfo).map((taxKey) => (\r\n                  <div key={taxKey} className=\"form-field\">\r\n                    <label className=\"field-label\">{formatFieldName(taxKey)}</label>\r\n                    <input\r\n                      type=\"number\" // Ensure numeric input\r\n                      value={formData.orderDetails.taxesInfo[taxKey] || \"\"} // Ensure value is a number\r\n                      onChange={(e) =>\r\n                        handleChange(e, \"orderDetails\", taxKey, null, \"taxesInfo\")\r\n                      }\r\n                      className=\"field-input\"\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Render Loyalty Data Section */}\r\n          {formData.orderDetails.loyaltyData && (\r\n            <div className=\"form-field\">\r\n              <h5>Loyalty Data</h5>\r\n              <div className=\"loyalty-data-block\">\r\n                {Object.keys(formData.orderDetails.loyaltyData).map((loyaltyKey) => (\r\n                  <div key={loyaltyKey} className=\"form-field\">\r\n                    <label className=\"field-label\">{formatFieldName(loyaltyKey)}</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={formData.orderDetails.loyaltyData[loyaltyKey]}\r\n                      onChange={(e) =>\r\n                        handleChange(e, \"orderDetails\", loyaltyKey, null, \"loyaltyData\")\r\n                      }\r\n                      className=\"field-input\"\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n\r\n    return Object.keys(formData[section]).map((key) => {\r\n      // Add dropdown for txnType in transactionInfo\r\n      if (section === \"transactionInfo\" && key === \"txnType\") {\r\n        return (\r\n          <div key={key} className=\"form-field\">\r\n            <label className=\"field-label\">{formatFieldName(key)}</label>\r\n            <select\r\n              value={formData[section][key]}\r\n              onChange={(e) => handleChange(e, section, key)}\r\n              className=\"field-input\"\r\n            >\r\n              <option value=\"UPI\">UPI</option>\r\n              <option value=\"CARD\">CARD</option>\r\n              <option value=\"CASH\">CASH</option>\r\n            </select>\r\n          </div>\r\n        );\r\n      }\r\n      return (\r\n        <div key={key} className=\"form-field\">\r\n          <label className=\"field-label\">{formatFieldName(key)}</label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData[section][key]}\r\n            onChange={(e) => handleChange(e, section, key)}\r\n            className=\"field-input\"\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h1 className=\"form-title\">Digital Invoice Form</h1>\r\n      <div className={`tabs ${popupMessage ? \"popup-active\" : \"\"}`}>\r\n        <button\r\n          className={`tab-button ${activeTab === \"customerInfo\" ? \"active\" : \"\"}`}\r\n          onClick={() => setActiveTab(\"customerInfo\")}\r\n        >\r\n          Customer Info\r\n        </button>\r\n        <button\r\n          className={`tab-button ${activeTab === \"transactionInfo\" ? \"active\" : \"\"}`}\r\n          onClick={() => setActiveTab(\"transactionInfo\")}\r\n        >\r\n          Transaction Info\r\n        </button>\r\n        <button\r\n          className={`tab-button ${activeTab === \"orderDetails\" ? \"active\" : \"\"}`}\r\n          onClick={() => setActiveTab(\"orderDetails\")}\r\n        >\r\n          Order Info\r\n        </button>\r\n        <button\r\n          className={`tab-button ${activeTab === \"productsData\" ? \"active\" : \"\"}`}\r\n          onClick={() => setActiveTab(\"productsData\")}\r\n        >\r\n          Product Info\r\n        </button>\r\n        <button\r\n          className={`tab-button ${activeTab === \"billFooterData\" ? \"active\" : \"\"}`}\r\n          onClick={() => setActiveTab(\"billFooterData\")}\r\n        >\r\n          Bill Footer Info\r\n        </button>\r\n      </div>\r\n      <form onSubmit={handleSubmit} className={`form ${popupMessage ? \"popup-active\" : \"\"}`}>\r\n        {activeTab === \"customerInfo\" && (\r\n          <div className=\"form-section\">{renderFields(\"customerInfo\")}</div>\r\n        )}\r\n        {activeTab === \"transactionInfo\" && (\r\n          <div className=\"form-section\">{renderFields(\"transactionInfo\")}</div>\r\n        )}\r\n        {activeTab === \"orderDetails\" && (\r\n          <div className=\"form-section\">{renderFields(\"orderDetails\")}</div>\r\n        )}\r\n        {activeTab === \"productsData\" && (\r\n          <div className=\"form-section\">{renderFields(\"productsData\")}</div>\r\n        )}\r\n        {activeTab === \"billFooterData\" && (\r\n          <div className=\"form-section\">{renderFields(\"billFooterData\")}</div>\r\n        )}\r\n        <button type=\"submit\" className=\"submit-button\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n      {loading && (\r\n  <div className=\"loading-toast\">\r\n    <div className=\"spinner\"></div>\r\n  </div>\r\n)}\r\n      {popupMessage && (\r\n        <div className={`popup ${popupType}`}>\r\n          <h3>{popupType === \"success\" ? \"Success\" : \"Error\"}</h3>\r\n          <p>{popupMessage}</p>\r\n          <button onClick={() => setPopupMessage(null)}>Close</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Delete confirmation prompt */}\r\n      {deleteProductIndex !== null && (\r\n        <div className=\"popup\">\r\n          <h3>Delete Product</h3>\r\n          <p>Do you want to delete this product?</p>\r\n          <div style={{ display: \"flex\", gap: \"12px\", justifyContent: \"center\" }}>\r\n            <button onClick={confirmDeleteProduct}>Yes</button>\r\n            <button onClick={cancelDeleteProduct}>No</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DigitalInvoiceForm;","import React from \"react\";\r\nimport DigitalInvoiceForm from \"./components/DigitalInvoiceForm\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <div className=\"logo\">\r\n        <div className=\"logo-text\">PINE LABS</div>\r\n      </div>\r\n      <DigitalInvoiceForm />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './styles/App.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}